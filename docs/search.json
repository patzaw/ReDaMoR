[{"path":"https://patzaw.github.io/ReDaMoR/articles/ReDaMoR.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Modeling Relational Data in R with ReDaMoR","text":"R, data often stored data frames tables row represents record column variable. data frames highly used, improved different objects tibble, data.table AnnotatedDataFrame. However, many projects, data fit one table organized different data frames, dealing specific concept. tables often related variables. Depending diversity concepts, can difficult remember tables represent connected. Fortunately, tables, set data frames can directly documented using relational data model. datamodelr R package provides tools document relational data. generate data models leveraged dm R package interact easily relational data. present ReDaMoR package also allows manipulation relational data models R approach quite different one implemented datamodelr. provides functions create, import save relational data models. functions accessible graphical user interface made Shiny. main features ReDaMoR following: Create data model scratch graphical user interface Save data model json format Import SQL data model generated MySQL Workbench Document data types R types (character, numeric, logical, …) Add comments tables fields improve model documentation Check auto-correct model constraints (types, keys, uniqueness, mandatory fields) Confront data model check compatibility ReDaMoR R package licensed GPL-3 source code available github.","code":""},{"path":[]},{"path":"https://patzaw.github.io/ReDaMoR/articles/ReDaMoR.html","id":"from-cran","dir":"Articles","previous_headings":"Installation","what":"From CRAN","title":"Modeling Relational Data in R with ReDaMoR","text":"","code":"install.packages(\"ReDaMoR\")"},{"path":"https://patzaw.github.io/ReDaMoR/articles/ReDaMoR.html","id":"dependencies","dir":"Articles","previous_headings":"Installation","what":"Dependencies","title":"Modeling Relational Data in R with ReDaMoR","text":"following R packages available CRAN required: dplyr: Grammar Data Manipulation magrittr: Forward-Pipe Operator R visNetwork: Network Visualization using ‘vis.js’ Library readr: Read Rectangular Text Data shiny: Web Application Framework R shinyjs: Easily Improve User Experience Shiny Apps Seconds DT: Wrapper JavaScript Library ‘DataTables’ rintrojs: Wrapper ‘Intro.js’ Library colourpicker: Colour Picker Tool Shiny Selecting Colours Plots jsonlite: Simple Robust JSON Parser Generator R markdown: Render Markdown ‘commonmark’ rstudioapi: Safely Access RStudio API crayon: Colored Terminal Output","code":""},{"path":"https://patzaw.github.io/ReDaMoR/articles/ReDaMoR.html","id":"from-github","dir":"Articles","previous_headings":"Installation","what":"From github","title":"Modeling Relational Data in R with ReDaMoR","text":"","code":"devtools::install_github(\"patzaw/ReDaMoR\")"},{"path":[]},{"path":"https://patzaw.github.io/ReDaMoR/articles/ReDaMoR.html","id":"running-the-app","dir":"Articles","previous_headings":"Creating and modifying relational data using the graphical user interface","what":"Running the app","title":"Modeling Relational Data in R with ReDaMoR","text":"Shiny app launched following command: Done button clicked, model returned R environment. interface can closed accidentally, model also autosaved can recovered using recover_RelDataModel() function. recovered model can provided modelInput calling model_relational_data(). example:","code":"library(ReDaMoR) m <- model_relational_data() m <- model_relational_data(recover_RelDataModel())"},{"path":[]},{"path":"https://patzaw.github.io/ReDaMoR/articles/ReDaMoR.html","id":"data-model-example-the-human-phenotype-ontology","dir":"Articles","previous_headings":"Creating and modifying relational data using the graphical user interface > Model formalism","what":"Data model example: the Human Phenotype Ontology","title":"Modeling Relational Data in R with ReDaMoR","text":"data model example provided within package. represents data extracted Human Phenotype Ontology (HPO)(1) subset also provided within ReDaMoR package (details provided Confronting data section). example can imported Shiny app clicking Import button Try example link. can also loaded displayed (edited) using following commands: view rendered visNetwork package. means can take advantages functions provided visNetwork package including use model Shiny apps.","code":"hpo_model <- read_json_data_model(   system.file(\"examples/HPO-model.json\", package=\"ReDaMoR\") ) plot(hpo_model) ## Edit the model # m <- model_relational_data(hpo_model)"},{"path":"https://patzaw.github.io/ReDaMoR/articles/ReDaMoR.html","id":"tables","dir":"Articles","previous_headings":"Creating and modifying relational data using the graphical user interface > Model formalism","what":"Tables","title":"Modeling Relational Data in R with ReDaMoR","text":"box represents table. header box corresponds name table following lines document field: type field given curly brackets star indicates field unique Field surrounded brackets optional Field bold involved primary key idx. correspond regular indexes uidx. correspond unique indexes cursor box, table field comments displayed.","code":""},{"path":"https://patzaw.github.io/ReDaMoR/articles/ReDaMoR.html","id":"foreign-keys","dir":"Articles","previous_headings":"Creating and modifying relational data using the graphical user interface > Model formalism","what":"Foreign keys","title":"Modeling Relational Data in R with ReDaMoR","text":"arrow represent foreign key: start arrow correspond origin table end arrow correspond target table mouse arrow, fields involved foreign key displayed along minimum maximum cardinalities key sides (brackets table name).","code":""},{"path":"https://patzaw.github.io/ReDaMoR/articles/ReDaMoR.html","id":"app-organization","dir":"Articles","previous_headings":"Creating and modifying relational data using the graphical user interface","what":"App organization","title":"Modeling Relational Data in R with ReDaMoR","text":"app divided three main parts: main menu top page execute general actions model model view left page interact model edition view right page execute contextual edition model","code":""},{"path":"https://patzaw.github.io/ReDaMoR/articles/ReDaMoR.html","id":"the-main-menu","dir":"Articles","previous_headings":"Creating and modifying relational data using the graphical user interface > App organization","what":"The main menu","title":"Modeling Relational Data in R with ReDaMoR","text":"General actions can executed model, using buttons main menu: Import json sql (sql models produced MySQL Workbench supported) files Export json html files (png file can also saved right clicking model view) Add table","code":""},{"path":"https://patzaw.github.io/ReDaMoR/articles/ReDaMoR.html","id":"the-model-view","dir":"Articles","previous_headings":"Creating and modifying relational data using the graphical user interface > App organization","what":"The model view","title":"Modeling Relational Data in R with ReDaMoR","text":"model view provides view data model rendered visNetwork package. Tables can selected clicking searching using box just model view. Autodraw autofit capabilities also provided area.","code":""},{"path":"https://patzaw.github.io/ReDaMoR/articles/ReDaMoR.html","id":"the-edition-view","dir":"Articles","previous_headings":"Creating and modifying relational data using the graphical user interface > App organization","what":"The edition view","title":"Modeling Relational Data in R with ReDaMoR","text":"edition view user can: Change color table Duplicate remove tables Add remove foreign keys table name table comment fields primary key indexes","code":""},{"path":"https://patzaw.github.io/ReDaMoR/articles/ReDaMoR.html","id":"contextual-help-tour","dir":"Articles","previous_headings":"Creating and modifying relational data using the graphical user interface > App organization","what":"Contextual help tour","title":"Modeling Relational Data in R with ReDaMoR","text":"help tour can launched clicking  button main menu. help tour contextual: content depends state app.","code":""},{"path":"https://patzaw.github.io/ReDaMoR/articles/ReDaMoR.html","id":"keyboard-shortcuts","dir":"Articles","previous_headings":"Creating and modifying relational data using the graphical user interface > App organization","what":"keyboard shortcuts","title":"Modeling Relational Data in R with ReDaMoR","text":"common keyboard shortcuts implemented: Ctrl+Z / Ctrl+Shift+Z  undo redo Enter validating new name del deleting tables foreign keys F2 renaming tables editing foreign key cardinalities","code":""},{"path":"https://patzaw.github.io/ReDaMoR/articles/ReDaMoR.html","id":"public-instance-of-the-app","dir":"Articles","previous_headings":"Creating and modifying relational data using the graphical user interface","what":"Public instance of the app","title":"Modeling Relational Data in R with ReDaMoR","text":"public instance app available . can easily deploy instance copying two lines app.R file:","code":"library(ReDaMoR) model_relational_data()"},{"path":"https://patzaw.github.io/ReDaMoR/articles/ReDaMoR.html","id":"adding-foreign-keys","dir":"Articles","previous_headings":"Creating and modifying relational data using the graphical user interface","what":"Adding foreign keys","title":"Modeling Relational Data in R with ReDaMoR","text":"interface, select one two tables (holding ctrl key) can create foreign key clicking “Key” button (See figure surrounded blue).  following interface appear:  table can select fields participating relationship (surrounded blue) add “+” button (surrounded red). can also change cardinality 2 sides relationship (surrounded yellow). can also change direction relationship arrow button (surrounded red). ’ve finished, can click “Add” button (surrounded purple) create foreign key. created relationship can still change cardinalities selecting relationship interest clicking edit “keys” button. need apply changes, ’ll delete key (“Discard keys” button) recreate .","code":""},{"path":"https://patzaw.github.io/ReDaMoR/articles/ReDaMoR.html","id":"confronting-data","dir":"Articles","previous_headings":"","what":"Confronting data","title":"Modeling Relational Data in R with ReDaMoR","text":"Data can confronted model using confront_data() function. process following checks performed: tables model available. columns model available. type column corresponds type model. NA values found non-nullable columns. duplicated value unique columns. duplicated value unique indexes. Foreign keys tested according cardinality: values table available table corresponding minimum cardinality greater 0. subset (500 phenotypes among 14 000 original resource) HPO(1) provided within package can directly confronted data model. function prints report messages global success data model confrontation additional failure warning messages relevant tables. report can also formatted using markdown included document one. returnData argument used keep data confrontation report. example data altered confronted data model. confrontation report shows discrepancies model data order facilitate correction one .","code":"confrontation_report <- confront_data(   hpo_model,   path=list.files(     system.file(\"examples/HPO-subset\", package=\"ReDaMoR\"),     full.names=TRUE   ),   returnData=TRUE ) #> Processing \"HPO_hp\" (table 1 / 9) #> Processing \"HPO_altId\" (table 2 / 9) #> Processing \"HPO_sourceFiles\" (table 3 / 9) #> Processing \"HPO_diseases\" (table 4 / 9) #> Processing \"HPO_diseaseHP\" (table 5 / 9) #> Processing \"HPO_diseaseSynonyms\" (table 6 / 9) #> Processing \"HPO_parents\" (table 7 / 9) #> Processing \"HPO_descendants\" (table 8 / 9) #> Processing \"HPO_synonyms\" (table 9 / 9) #> Model #> SUCCESS #>  #> Check configuration #>    - Optional checks: unique, not nullable, foreign keys #>    - Maximum number of records: Inf #>  #> HPO_hp #> SUCCESS #> Field issues or warnings #>    - description: SUCCESS Missing values 117/500 = 23% # view_confrontation_report(confrontation_report) # Use RStudio viewer format_confrontation_report_md(   confrontation_report,   title=\"Example: Confrontation with original data\",   level=1, numbered=FALSE ) %>%   cat() hpo_tables <- confrontation_report$data hpo_tables$HPO_diseases <- hpo_tables$HPO_diseases %>% slice(1:100) hpo_tables$HPO_synonyms[1:10, \"synonym\"] <- NA hpo_tables$HPO_hp <- hpo_tables$HPO_hp %>% mutate(level=as.character(level)) confront_data(hpo_model, hpo_tables, verbose=FALSE) %>%   format_confrontation_report_md(     title=\"Example: Confrontation with altered data\",     level=1, numbered=FALSE   ) %>%     cat()"},{"path":"https://patzaw.github.io/ReDaMoR/articles/ReDaMoR.html","id":"example-confrontation-with-original-data","dir":"Articles","previous_headings":"Confronting data","what":"Example: Confrontation with original data","title":"Modeling Relational Data in R with ReDaMoR","text":"SUCCESS","code":""},{"path":"https://patzaw.github.io/ReDaMoR/articles/ReDaMoR.html","id":"check-configuration","dir":"Articles","previous_headings":"Confronting data > Example: Confrontation with original data","what":"Check configuration","title":"Modeling Relational Data in R with ReDaMoR","text":"Optional checks: unique, nullable, foreign keys Maximum number records: Inf","code":""},{"path":"https://patzaw.github.io/ReDaMoR/articles/ReDaMoR.html","id":"hpo_hp","dir":"Articles","previous_headings":"Confronting data > Example: Confrontation with original data","what":"HPO_hp","title":"Modeling Relational Data in R with ReDaMoR","text":"SUCCESS","code":""},{"path":"https://patzaw.github.io/ReDaMoR/articles/ReDaMoR.html","id":"field-issues-or-warnings","dir":"Articles","previous_headings":"Confronting data > Example: Confrontation with original data > HPO_hp","what":"Field issues or warnings","title":"Modeling Relational Data in R with ReDaMoR","text":"description: SUCCESS Missing values 117/500 = 23%","code":""},{"path":"https://patzaw.github.io/ReDaMoR/articles/ReDaMoR.html","id":"example-confrontation-with-altered-data","dir":"Articles","previous_headings":"Confronting data","what":"Example: Confrontation with altered data","title":"Modeling Relational Data in R with ReDaMoR","text":"FAILURE","code":""},{"path":"https://patzaw.github.io/ReDaMoR/articles/ReDaMoR.html","id":"check-configuration-1","dir":"Articles","previous_headings":"Confronting data > Example: Confrontation with altered data","what":"Check configuration","title":"Modeling Relational Data in R with ReDaMoR","text":"Optional checks: unique, nullable, foreign keys Maximum number records: Inf","code":""},{"path":"https://patzaw.github.io/ReDaMoR/articles/ReDaMoR.html","id":"hpo_hp-1","dir":"Articles","previous_headings":"Confronting data > Example: Confrontation with altered data","what":"HPO_hp","title":"Modeling Relational Data in R with ReDaMoR","text":"FAILURE","code":""},{"path":"https://patzaw.github.io/ReDaMoR/articles/ReDaMoR.html","id":"field-issues-or-warnings-1","dir":"Articles","previous_headings":"Confronting data > Example: Confrontation with altered data > HPO_hp","what":"Field issues or warnings","title":"Modeling Relational Data in R with ReDaMoR","text":"description: SUCCESS Missing values 117/500 = 23% level: FAILURE Unexpected “character”","code":""},{"path":"https://patzaw.github.io/ReDaMoR/articles/ReDaMoR.html","id":"hpo_diseasehp","dir":"Articles","previous_headings":"Confronting data > Example: Confrontation with altered data","what":"HPO_diseaseHP","title":"Modeling Relational Data in R with ReDaMoR","text":"FAILURE","code":""},{"path":"https://patzaw.github.io/ReDaMoR/articles/ReDaMoR.html","id":"foreign-keys-issues-or-warnings","dir":"Articles","previous_headings":"Confronting data > Example: Confrontation with altered data > HPO_diseaseHP","what":"Foreign keys issues or warnings","title":"Modeling Relational Data in R with ReDaMoR","text":"HPO_diseases [db->db + id->id]: FAILURE keys HPO_diseaseHP available HPO_diseases.","code":""},{"path":"https://patzaw.github.io/ReDaMoR/articles/ReDaMoR.html","id":"hpo_diseasesynonyms","dir":"Articles","previous_headings":"Confronting data > Example: Confrontation with altered data","what":"HPO_diseaseSynonyms","title":"Modeling Relational Data in R with ReDaMoR","text":"FAILURE","code":""},{"path":"https://patzaw.github.io/ReDaMoR/articles/ReDaMoR.html","id":"foreign-keys-issues-or-warnings-1","dir":"Articles","previous_headings":"Confronting data > Example: Confrontation with altered data > HPO_diseaseSynonyms","what":"Foreign keys issues or warnings","title":"Modeling Relational Data in R with ReDaMoR","text":"HPO_diseases [db->db + id->id]: FAILURE keys HPO_diseaseSynonyms available HPO_diseases.","code":""},{"path":"https://patzaw.github.io/ReDaMoR/articles/ReDaMoR.html","id":"hpo_synonyms","dir":"Articles","previous_headings":"Confronting data > Example: Confrontation with altered data","what":"HPO_synonyms","title":"Modeling Relational Data in R with ReDaMoR","text":"FAILURE","code":""},{"path":"https://patzaw.github.io/ReDaMoR/articles/ReDaMoR.html","id":"field-issues-or-warnings-2","dir":"Articles","previous_headings":"Confronting data > Example: Confrontation with altered data > HPO_synonyms","what":"Field issues or warnings","title":"Modeling Relational Data in R with ReDaMoR","text":"synonym: FAILURE Missing values 10/730 = 1%","code":""},{"path":"https://patzaw.github.io/ReDaMoR/articles/ReDaMoR.html","id":"drafting-a-data-model-from-data-frames","dir":"Articles","previous_headings":"Confronting data","what":"Drafting a data model from data frames","title":"Modeling Relational Data in R with ReDaMoR","text":"Beside confronting model data, model can also drafted set tables. column names types documented process. Uniqueness, mandatory key constraints still need documented user complete model. can easily done model_relational_data().","code":"hpo_tables <- confrontation_report$data new_model <- df_to_model(   list=names(hpo_tables), envir=as.environment(hpo_tables) ) new_model %>%   auto_layout(lengthMultiplier=250) %>%   plot() # model_relational_data(new_model)"},{"path":"https://patzaw.github.io/ReDaMoR/articles/ReDaMoR.html","id":"support-of-matrices","dir":"Articles","previous_headings":"","what":"Support of matrices","title":"Modeling Relational Data in R with ReDaMoR","text":"Matrices (2 dimensions) supported ReDaMoR (>= 0.5). matrix modeled table 3 3 fields: 2 types row column third choice. row column compose primary index special table, unique independently (cell matrix always identified row column). example shows model gene_expression matrix: rows correspond genes, column samples value gene expression value sample. Genes samples described genes samples tables.","code":"ge_model <- read_json_data_model(   system.file(\"examples/GE-model.json\", package=\"ReDaMoR\") ) plot(ge_model)"},{"path":"https://patzaw.github.io/ReDaMoR/articles/ReDaMoR.html","id":"tkcat-tailored-knowledge-catalog","dir":"Articles","previous_headings":"","what":"TKCat: Tailored Knowledge Catalog","title":"Modeling Relational Data in R with ReDaMoR","text":"aim TKCat (Tailored Knowledge Catalog) facilitate management data knowledge resources frequently used alone together research environments. TKCat, knowledge resources manipulated modeled database (MDB) objects. objects provide access data tables along general description resource detail data model generated ReDaMoR documenting tables, fields relationships. MDB gathered catalogs can easily explored shared. TKCat provides tools easily subset, filter combine MDBs create new catalogs suited specific needs. modeled database (MDB) TKCat gathers following information: General database information including mandatory name optionally following fields: title, description, url, version maintainer. data model created using [ReDaMoR][redamor] package. list tables corresponding reference concepts shared different MDBs. way concepts identified defined specific documents called collections. data organized according data model. MDB objects can subsetted, combined, filtered, joined merged. TKCat supports different implementations MDB objects memoMDB (data memory), fileMDB (data files) chMDB (data ClickHouse database). information provided TKCat user guide.","code":""},{"path":"https://patzaw.github.io/ReDaMoR/articles/ReDaMoR.html","id":"acknowledgments","dir":"Articles","previous_headings":"","what":"Acknowledgments","title":"Modeling Relational Data in R with ReDaMoR","text":"work entirely supported UCB Pharma. (Early Solutions department)","code":""},{"path":"https://patzaw.github.io/ReDaMoR/articles/ReDaMoR.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Modeling Relational Data in R with ReDaMoR","text":"(1) Sebastian Köhler, Leigh Carmody, Nicole Vasilevsky, Julius O B Jacobsen, et al. Expansion Human Phenotype Ontology (HPO) knowledge base resources. Nucleic Acids Research. (2018) doi: 10.1093/nar/gky1105","code":""},{"path":"https://patzaw.github.io/ReDaMoR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Patrice Godard. Author, maintainer, copyright holder. Kai Lin. Contributor.","code":""},{"path":"https://patzaw.github.io/ReDaMoR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Godard P (2024). ReDaMoR: Relational Data Modeler. R package version 0.7.6,  https://github.com/patzaw/ReDaMoR/, https://patzaw.github.io/ReDaMoR/.","code":"@Manual{,   title = {ReDaMoR: Relational Data Modeler},   author = {Patrice Godard},   year = {2024},   note = {R package version 0.7.6,  https://github.com/patzaw/ReDaMoR/},   url = {https://patzaw.github.io/ReDaMoR/}, }"},{"path":"https://patzaw.github.io/ReDaMoR/index.html","id":"readme","dir":"","previous_headings":"","what":"Relational Data Modeler","title":"Relational Data Modeler","text":"Introduction CRAN Dependencies github Documentation TKCat: Tailored Knowledge Catalog Acknowledgments   ReDaMoR package allows manipulation relational data models R. provides functions create, import save relational data models. functions accessible graphical user interface made Shiny. public instance Shiny app available . main features ReDaMoR following: Create data model scratch graphical user interface Save data model json format Import SQL data model generated MySQL Workbench Document data types R types (character, numeric, logical, …) Add comments tables fields improve model documentation Check auto-correct model constraints (types, keys, uniqueness, mandatory fields) Confront data model check compatibility Support matrices (>= 0.5.0) TKCat package relies ReDaMoR facilitate management data knowledge resources manipulated modeled database (MDB) objects. package can also tested Rstudio Cloud. can also run code documented package vignette.","code":"library(ReDaMoR) m <- model_relational_data()"},{"path":"https://patzaw.github.io/ReDaMoR/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Relational Data Modeler","text":"R, data often stored data frames tables row represents record column variable. data frames highly used improved different objects tibble, data.table AnnotatedDataFrame. However, many projects, data fit one table organized different data frames, dealing specific concept. tables often related variables. Depending diversity concepts, can difficult remember tables represent connected. Fortunately, tables, set data frames can directly documented using relational data model. datamodelr R package provides tools document relational data. generate data models leveraged dm R package interact easily relational data. present ReDaMoR package also allows manipulation relational data models R approach quite different one implemented datamodelr. provides functions create, import save relational data models. functions accessible graphical user interface made Shiny. main features ReDaMoR following: Create data model scratch graphical user interface Save data model json format Import SQL data model generated MySQL Workbench Document data types R types (character, numeric, logical, …) Add comments tables fields improve model documentation Check auto-correct model constraints (types, keys, uniqueness, mandatory fields) Confront data model check compatibility Support matrices (>= 0.5.0) TKCat package relies ReDaMoR facilitate management data knowledge resources manipulated modeled database (MDB) objects.","code":""},{"path":[]},{"path":"https://patzaw.github.io/ReDaMoR/index.html","id":"from-cran","dir":"","previous_headings":"","what":"From CRAN","title":"Relational Data Modeler","text":"","code":"install.packages(\"ReDaMoR\")"},{"path":"https://patzaw.github.io/ReDaMoR/index.html","id":"dependencies","dir":"","previous_headings":"","what":"Dependencies","title":"Relational Data Modeler","text":"following R packages available CRAN required: dplyr: Grammar Data Manipulation magrittr: Forward-Pipe Operator R visNetwork: Network Visualization using ‘vis.js’ Library readr: Read Rectangular Text Data shiny: Web Application Framework R shinyjs: Easily Improve User Experience Shiny Apps Seconds jsonlite: Simple Robust JSON Parser Generator R DT: Wrapper JavaScript Library ‘DataTables’ colourpicker: Colour Picker Tool Shiny Selecting Colours Plots rintrojs: Wrapper ‘Intro.js’ Library markdown: Render Markdown ‘commonmark’ rstudioapi: Safely Access RStudio API crayon: Colored Terminal Output utils: R Utils Package graphics: R Graphics Package stats: R Stats Package Matrix: Sparse Dense Matrix Classes Methods suggested: knitr: General-Purpose Package Dynamic Report Generation R rmarkdown: Dynamic Documents R igraph: Network Analysis Visualization base64enc: Tools base64 encoding","code":""},{"path":"https://patzaw.github.io/ReDaMoR/index.html","id":"from-github","dir":"","previous_headings":"","what":"From github","title":"Relational Data Modeler","text":"","code":"devtools::install_github(\"patzaw/ReDaMoR\")"},{"path":"https://patzaw.github.io/ReDaMoR/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Relational Data Modeler","text":"Documentation available vignette.","code":""},{"path":"https://patzaw.github.io/ReDaMoR/index.html","id":"tkcat-tailored-knowledge-catalog","dir":"","previous_headings":"","what":"TKCat: Tailored Knowledge Catalog","title":"Relational Data Modeler","text":"aim TKCat (Tailored Knowledge Catalog) facilitate management data knowledge resources frequently used alone together research environments. TKCat, knowledge resources manipulated modeled database (MDB) objects. objects provide access data tables along general description resource detail data model generated ReDaMoR documenting tables, fields relationships. MDB gathered catalogs can easily explored shared. TKCat provides tools easily subset, filter combine MDBs create new catalogs suited specific needs.","code":""},{"path":"https://patzaw.github.io/ReDaMoR/index.html","id":"acknowledgments","dir":"","previous_headings":"","what":"Acknowledgments","title":"Relational Data Modeler","text":"work entirely supported UCB Pharma (Early Solutions department).","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/RelDataModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a RelDataModel object — RelDataModel","title":"Create a RelDataModel object — RelDataModel","text":"Create RelDataModel object","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/RelDataModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a RelDataModel object — RelDataModel","text":"","code":"RelDataModel(l, checkFK = TRUE)"},{"path":"https://patzaw.github.io/ReDaMoR/reference/RelDataModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a RelDataModel object — RelDataModel","text":"l list table models (RelTableModel objects) checkFK logical indicating foreign keys checked (default: TRUE)","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/RelDataModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a RelDataModel object — RelDataModel","text":"RelDataModel object.","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/RelTableModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a RelTableModel object — RelTableModel","title":"Create a RelTableModel object — RelTableModel","text":"Create RelTableModel object","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/RelTableModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a RelTableModel object — RelTableModel","text":"","code":"RelTableModel(   l = NULL,   tableName,   fields,   primaryKey = NULL,   foreignKeys = NULL,   indexes = NULL,   display = list(x = as.numeric(NA), y = as.numeric(NA), color = as.character(NA),     comment = as.character(NA)) )"},{"path":"https://patzaw.github.io/ReDaMoR/reference/RelTableModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a RelTableModel object — RelTableModel","text":"l DEPRECATED. named list function parameters. NULL (default) function parameters used. NULL, function parameters ignored taken l. tableName character vector length one fields tibble following columns: name: character type: character nullable: logical (optional, defaults TRUE) unique: logical (optional, defaults = FALSE) comment:  character (optional, defaults NA_character_) primaryKey character vector length. values fields$name foreignKeys list foreign keys. foreign key defined list following elements: refTable: character vector length one (referenced table) key: tibble \"\" \"\" columns (cardinality): optional integer vector 4 values: fmin: minimum cardinality fmax: maximum cardinality tmin: minimum cardinality tmax: maximum cardinality indexes list indexes. index defined 3 columns: field: character (fields$name) order: character unique: logical display list gathering: x: single numeric value x position table y: single numeric value y position table color: single character value corresponding color table comment: single character value description table","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/RelTableModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a RelTableModel object — RelTableModel","text":"RelTableModel object.","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/RelTableModel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a RelTableModel object — RelTableModel","text":"defining matrix, 3 3 fields must defined: 2 types 'row' 'column' 3rd choice. case primaryKey defined automatically combination row column.","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/SUPPTYPES.html","id":null,"dir":"Reference","previous_headings":"","what":"Supported R types — SUPPTYPES","title":"Supported R types — SUPPTYPES","text":"Supported R types","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/SUPPTYPES.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Supported R types — SUPPTYPES","text":"","code":"SUPPTYPES"},{"path":"https://patzaw.github.io/ReDaMoR/reference/SUPPTYPES.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Supported R types — SUPPTYPES","text":"object class character length 7.","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/add_field.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a field to a table in a RelDataModel — add_field","title":"Add a field to a table in a RelDataModel — add_field","text":"Add field table RelDataModel","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/add_field.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a field to a table in a RelDataModel — add_field","text":"","code":"add_field(x, tableName, name, type, nullable, unique, comment)"},{"path":"https://patzaw.github.io/ReDaMoR/reference/add_field.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a field to a table in a RelDataModel — add_field","text":"x RelDataModel tableName name table modify (single character) name name field add (single character) type type field (single character) nullable field nullable (single logical) unique values unique (single logical) comment description (single character)","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/add_field.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a field to a table in a RelDataModel — add_field","text":"RelDataModel","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/add_foreign_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a foreign key between two tables — add_foreign_key","title":"Add a foreign key between two tables — add_foreign_key","text":"Add foreign key two tables","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/add_foreign_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a foreign key between two tables — add_foreign_key","text":"","code":"add_foreign_key(   x,   fromTable,   fromFields,   toTable,   toFields,   fmin = 0L,   fmax = -1L,   tmin = 1L,   tmax = 1L )"},{"path":"https://patzaw.github.io/ReDaMoR/reference/add_foreign_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a foreign key between two tables — add_foreign_key","text":"x RelDataModel fromTable name referencing table fromFields name referencing fields toTable name referenced table toFields names referenced fields fmin minimum cardinality (default: 0L) fmax maximum cardinality (default: -1L ==> Infinite) tmin minimum cardinality (default: 1L) tmax maximum cardinality (default: 1L)","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/add_foreign_key.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a foreign key between two tables — add_foreign_key","text":"RelDataModel","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/add_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Add an index to a table in a RelDataModel — add_index","title":"Add an index to a table in a RelDataModel — add_index","text":"Add index table RelDataModel","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/add_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add an index to a table in a RelDataModel — add_index","text":"","code":"add_index(x, tableName, fieldNames, unique)"},{"path":"https://patzaw.github.io/ReDaMoR/reference/add_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add an index to a table in a RelDataModel — add_index","text":"x RelDataModel tableName name table modify (single character) fieldNames names fields include index unique logical indicating indexed values unique","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/add_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add an index to a table in a RelDataModel — add_index","text":"RelDataModel","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/add_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a table to a RelDataModel — add_table","title":"Add a table to a RelDataModel — add_table","text":"Add table RelDataModel","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/add_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a table to a RelDataModel — add_table","text":"","code":"add_table(x, newTable)"},{"path":"https://patzaw.github.io/ReDaMoR/reference/add_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a table to a RelDataModel — add_table","text":"x RelDataModel newTable name new table RelTableModel","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/add_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a table to a RelDataModel — add_table","text":"RelDataModel","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/as_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an object into a specific type — as_type","title":"Convert an object into a specific type — as_type","text":"Convert object specific type","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/as_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an object into a specific type — as_type","text":"","code":"as_type(x, type)"},{"path":"https://patzaw.github.io/ReDaMoR/reference/as_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an object into a specific type — as_type","text":"x object convert type targeted type","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/auto_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Pre-compute RelDataModel layout when missing any x or y table position — auto_layout","title":"Pre-compute RelDataModel layout when missing any x or y table position — auto_layout","text":"Pre-compute RelDataModel layout missing x y table position","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/auto_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pre-compute RelDataModel layout when missing any x or y table position — auto_layout","text":"","code":"auto_layout(   x,   layout = \"layout_nicely\",   lengthMultiplier = 40 * length(x),   force = FALSE )"},{"path":"https://patzaw.github.io/ReDaMoR/reference/auto_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pre-compute RelDataModel layout when missing any x or y table position — auto_layout","text":"x RelDataModel layout character name igraph layout function use (Default: \"layout_nicely\"). lengthMultiplier numeric value scale x y coordinate (default: 40*length(x)) force TRUE autolayout even tables coordinates (default: FALSE)","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/auto_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pre-compute RelDataModel layout when missing any x or y table position — auto_layout","text":"RelDataModel","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/c.RelDataModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge RelDataModel objects — c.RelDataModel","title":"Merge RelDataModel objects — c.RelDataModel","text":"Merge RelDataModel objects","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/c.RelDataModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge RelDataModel objects — c.RelDataModel","text":"","code":"# S3 method for RelDataModel c(..., checkFK = TRUE)"},{"path":"https://patzaw.github.io/ReDaMoR/reference/c.RelDataModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge RelDataModel objects — c.RelDataModel","text":"... RelDataModel objects checkFK logical indicating foreign keys checked (default: TRUE)","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/c.RelDataModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge RelDataModel objects — c.RelDataModel","text":"RelDataModel objects","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/check_foreign_keys.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the availability of foreign keys — check_foreign_keys","title":"Check the availability of foreign keys — check_foreign_keys","text":"Check availability foreign keys","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/check_foreign_keys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the availability of foreign keys — check_foreign_keys","text":"","code":"check_foreign_keys(x)"},{"path":"https://patzaw.github.io/ReDaMoR/reference/check_foreign_keys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the availability of foreign keys — check_foreign_keys","text":"x RelDataModel object","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/check_foreign_keys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the availability of foreign keys — check_foreign_keys","text":"Nothing. function throws error issue foreign keys.","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/check_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a set of types is supported — check_types","title":"Check if a set of types is supported — check_types","text":"Check set types supported","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/check_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a set of types is supported — check_types","text":"","code":"check_types(x)"},{"path":"https://patzaw.github.io/ReDaMoR/reference/check_types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a set of types is supported — check_types","text":"x character vector types checked","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/clean_autosaved_RelDataModels.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove all autosaved RelDataModel — clean_autosaved_RelDataModels","title":"Remove all autosaved RelDataModel — clean_autosaved_RelDataModels","text":"Remove autosaved RelDataModel","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/clean_autosaved_RelDataModels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove all autosaved RelDataModel — clean_autosaved_RelDataModels","text":"","code":"clean_autosaved_RelDataModels()"},{"path":"https://patzaw.github.io/ReDaMoR/reference/col_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the types of the columns of a RelTableModel object — col_types","title":"Get the types of the columns of a RelTableModel object — col_types","text":"Get types columns RelTableModel object","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/col_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the types of the columns of a RelTableModel object — col_types","text":"","code":"col_types(x)"},{"path":"https://patzaw.github.io/ReDaMoR/reference/col_types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the types of the columns of a RelTableModel object — col_types","text":"x RelTableModel object","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/col_types.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the types of the columns of a RelTableModel object — col_types","text":"col_spec object type column","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/confront_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Confront a RelDataModel to actual data — confront_data","title":"Confront a RelDataModel to actual data — confront_data","text":"Confront RelDataModel actual data","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/confront_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confront a RelDataModel to actual data — confront_data","text":"","code":"confront_data(   x,   data = list(),   paths = NULL,   returnData = FALSE,   verbose = TRUE,   n_max = Inf,   checks = if (n_max == Inf) {      c(\"unique\", \"not nullable\", \"foreign keys\")  } else     {      as.character()  },   delim = \"\\t\",   ... )"},{"path":"https://patzaw.github.io/ReDaMoR/reference/confront_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confront a RelDataModel to actual data — confront_data","text":"x RelDataModel data list data frames confronted model. paths character vector file paths taken account data empty. file basename without extension considered table name. returnData logical indicating data returned report (default: FALSE). verbose single logical value indicating process information displayed (default: TRUE) n_max maximum number records read (default: Inf). checks character vector name optional checks done (Default: n_max==Inf ==> c(\"unique\", \"nullable\", \"foreign keys\"), else ==> none) delim single character used separate fields within record (default: \"\\t\") ... supplementary parameters readr::read_delim function.","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/confront_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confront a RelDataModel to actual data — confront_data","text":"report list","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/confront_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confront a RelDataModel to actual data — confront_data","text":"","code":"## Read the model ---- hpo_model <- read_json_data_model(    system.file(\"examples/HPO-model.json\", package=\"ReDaMoR\") ) ## Confront to data ---- confrontation_report <- confront_data(    hpo_model,    path=list.files(       system.file(\"examples/HPO-subset\", package=\"ReDaMoR\"),       full.names=TRUE    ),    returnData=TRUE ) #> Processing \"HPO_hp\" (table 1 / 9)  #> Processing \"HPO_altId\" (table 2 / 9)  #> Processing \"HPO_sourceFiles\" (table 3 / 9)  #> Processing \"HPO_diseases\" (table 4 / 9)  #> Processing \"HPO_diseaseHP\" (table 5 / 9)  #> Processing \"HPO_diseaseSynonyms\" (table 6 / 9)  #> Processing \"HPO_parents\" (table 7 / 9)  #> Processing \"HPO_descendants\" (table 8 / 9)  #> Processing \"HPO_synonyms\" (table 9 / 9)  #> Model #> SUCCESS #>  #> Check configuration #>    - Optional checks: unique, not nullable, foreign keys #>    - Maximum number of records: Inf #>  #> HPO_hp #> SUCCESS #> Field issues or warnings #>    - description: SUCCESS Missing values 117/500 = 23% #>"},{"path":"https://patzaw.github.io/ReDaMoR/reference/confront_table_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Confront a RelTableModel to actual data — confront_table_data","title":"Confront a RelTableModel to actual data — confront_table_data","text":"Confront RelTableModel actual data","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/confront_table_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confront a RelTableModel to actual data — confront_table_data","text":"","code":"confront_table_data(x, d, checks = c(\"unique\", \"not nullable\"))"},{"path":"https://patzaw.github.io/ReDaMoR/reference/confront_table_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confront a RelTableModel to actual data — confront_table_data","text":"x RelTableModel d data frame matrix matrix model checks character vector name optional checks done (Default: c(\"unique\", \"nullable\"))","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/confront_table_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confront a RelTableModel to actual data — confront_table_data","text":"report list","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/conv_type_ref.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a set of types from or to R supported types — conv_type_ref","title":"Convert a set of types from or to R supported types — conv_type_ref","text":"Convert set types R supported types","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/conv_type_ref.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a set of types from or to R supported types — conv_type_ref","text":"","code":"conv_type_ref(x, from = NULL, to = NULL, ignore.case = TRUE)"},{"path":"https://patzaw.github.io/ReDaMoR/reference/conv_type_ref.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a set of types from or to R supported types — conv_type_ref","text":"x character vector types converted. null, x set valid types reference. null, x set supported R types (SUPPTYPES). character vector length one: type reference (list_type_ref) x character vector length one: targeted type reference (list_type_ref) ignore.case case ignored converting ``` type reference (default: TRUE)","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/conv_type_ref.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert a set of types from or to R supported types — conv_type_ref","text":"XOR set","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/copy_fields.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy fields from one table to another in a RelDataModel — copy_fields","title":"Copy fields from one table to another in a RelDataModel — copy_fields","text":"Copy fields one table another RelDataModel","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/copy_fields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy fields from one table to another in a RelDataModel — copy_fields","text":"","code":"copy_fields(x, from, to, fields)"},{"path":"https://patzaw.github.io/ReDaMoR/reference/copy_fields.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy fields from one table to another in a RelDataModel — copy_fields","text":"x RelDataModel name table fields taken name table fields copied fields names fields copy","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/copy_fields.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copy fields from one table to another in a RelDataModel — copy_fields","text":"RelDataModel","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/correct_constraints.html","id":null,"dir":"Reference","previous_headings":"","what":"Correct the constraints of a table to make them consistent — correct_constraints","title":"Correct the constraints of a table to make them consistent — correct_constraints","text":"Correct constraints table make consistent","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/correct_constraints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correct the constraints of a table to make them consistent — correct_constraints","text":"","code":"correct_constraints(x)"},{"path":"https://patzaw.github.io/ReDaMoR/reference/correct_constraints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correct the constraints of a table to make them consistent — correct_constraints","text":"x RelTableModel object","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/df_to_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a RelDataModel object from column names of data frames — df_to_model","title":"Create a RelDataModel object from column names of data frames — df_to_model","text":"Create RelDataModel object column names data frames","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/df_to_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a RelDataModel object from column names of data frames — df_to_model","text":"","code":"df_to_model(..., list = character(), pos = -1, envir = as.environment(pos))"},{"path":"https://patzaw.github.io/ReDaMoR/reference/df_to_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a RelDataModel object from column names of data frames — df_to_model","text":"... data frame objects, names (unquoted) character strings (quoted) list character vector naming data frame objects pos get objects. default, uses current environment. See ‘details’ possibilities. envir environment use. See ‘details’.","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/df_to_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a RelDataModel object from column names of data frames — df_to_model","text":"RelDataModel object.","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/df_to_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a RelDataModel object from column names of data frames — df_to_model","text":"pos argument can specify environment get objects several ways: integer (position search list); character string name element search list; environment. envir argument alternative way specify environment, primarily back compatibility.","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/df_to_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a RelDataModel object from column names of data frames — df_to_model","text":"","code":"## Read data files ---- to_read <- list.files(    system.file(\"examples/HPO-subset\", package=\"ReDaMoR\"),    full.names=TRUE ) hpo_tables <- list() for(f in to_read){    hpo_tables[[sub(\"[.]txt$\", \"\", basename(f))]] <- readr::read_tsv(f) } #> Rows: 89 Columns: 2 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"\\t\" #> chr (2): id, alt #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 972 Columns: 2 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"\\t\" #> chr (2): id, descendant #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 2594 Columns: 3 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"\\t\" #> chr (2): db, hp #> dbl (1): id #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 2337 Columns: 4 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"\\t\" #> chr (2): db, synonym #> dbl (1): id #> lgl (1): preferred #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 1903 Columns: 3 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"\\t\" #> chr (2): db, label #> dbl (1): id #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 500 Columns: 4 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"\\t\" #> chr (3): id, name, description #> dbl (1): level #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 95 Columns: 2 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"\\t\" #> chr (2): id, parent #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 2 Columns: 2 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"\\t\" #> chr  (1): url #> date (1): current #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 730 Columns: 3 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"\\t\" #> chr (3): id, synonym, type #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. ## Build the model from a list of data frames ---- new_model <- df_to_model(    list=names(hpo_tables), envir=as.environment(hpo_tables) ) ## Plot the model ---- new_model %>%    auto_layout(lengthMultiplier=250) %>%    plot()  {\"x\":{\"nodes\":{\"tableName\":[\"HPO_altId\",\"HPO_descendants\",\"HPO_diseaseHP\",\"HPO_diseaseSynonyms\",\"HPO_diseases\",\"HPO_hp\",\"HPO_parents\",\"HPO_sourceFiles\",\"HPO_synonyms\"],\"label\":[\"<b>HPO_altId<\\/b>\\n    - (id {character})\\n    - (alt {character})\",\"<b>HPO_descendants<\\/b>\\n    - (id {character})\\n    - (descendant {character})\",\"<b>HPO_diseaseHP<\\/b>\\n    - (db {character})\\n    - (id {numeric})\\n    - (hp {character})\",\"<b>HPO_diseaseSynonyms<\\/b>\\n    - (db {character})\\n    - (id {numeric})\\n    - (synonym {character})\\n    - (preferred {logical})\",\"<b>HPO_diseases<\\/b>\\n    - (db {character})\\n    - (id {numeric})\\n    - (label {character})\",\"<b>HPO_hp<\\/b>\\n    - (id {character})\\n    - (name {character})\\n    - (description {character})\\n    - (level {numeric})\",\"<b>HPO_parents<\\/b>\\n    - (id {character})\\n    - (parent {character})\",\"<b>HPO_sourceFiles<\\/b>\\n    - (url {character})\\n    - (current {Date})\",\"<b>HPO_synonyms<\\/b>\\n    - (id {character})\\n    - (synonym {character})\\n    - (type {character})\"],\"title\":[\"<div style=\\\"max-width:400px; max-height:300px;overflow:scroll;\\\"><p><strong style=\\\"text-decoration:underline;\\\">HPO_altId<\\/strong><\\/p> <ul> <li><strong>id<\\/strong><\\/li> <li><strong>alt<\\/strong><\\/li> <\\/ul><\\/div>\",\"<div style=\\\"max-width:400px; max-height:300px;overflow:scroll;\\\"><p><strong style=\\\"text-decoration:underline;\\\">HPO_descendants<\\/strong><\\/p> <ul> <li><strong>id<\\/strong><\\/li> <li><strong>descendant<\\/strong><\\/li> <\\/ul><\\/div>\",\"<div style=\\\"max-width:400px; max-height:300px;overflow:scroll;\\\"><p><strong style=\\\"text-decoration:underline;\\\">HPO_diseaseHP<\\/strong><\\/p> <ul> <li><strong>db<\\/strong><\\/li> <li><strong>id<\\/strong><\\/li> <li><strong>hp<\\/strong><\\/li> <\\/ul><\\/div>\",\"<div style=\\\"max-width:400px; max-height:300px;overflow:scroll;\\\"><p><strong style=\\\"text-decoration:underline;\\\">HPO_diseaseSynonyms<\\/strong><\\/p> <ul> <li><strong>db<\\/strong><\\/li> <li><strong>id<\\/strong><\\/li> <li><strong>synonym<\\/strong><\\/li> <li><strong>preferred<\\/strong><\\/li> <\\/ul><\\/div>\",\"<div style=\\\"max-width:400px; max-height:300px;overflow:scroll;\\\"><p><strong style=\\\"text-decoration:underline;\\\">HPO_diseases<\\/strong><\\/p> <ul> <li><strong>db<\\/strong><\\/li> <li><strong>id<\\/strong><\\/li> <li><strong>label<\\/strong><\\/li> <\\/ul><\\/div>\",\"<div style=\\\"max-width:400px; max-height:300px;overflow:scroll;\\\"><p><strong style=\\\"text-decoration:underline;\\\">HPO_hp<\\/strong><\\/p> <ul> <li><strong>id<\\/strong><\\/li> <li><strong>name<\\/strong><\\/li> <li><strong>description<\\/strong><\\/li> <li><strong>level<\\/strong><\\/li> <\\/ul><\\/div>\",\"<div style=\\\"max-width:400px; max-height:300px;overflow:scroll;\\\"><p><strong style=\\\"text-decoration:underline;\\\">HPO_parents<\\/strong><\\/p> <ul> <li><strong>id<\\/strong><\\/li> <li><strong>parent<\\/strong><\\/li> <\\/ul><\\/div>\",\"<div style=\\\"max-width:400px; max-height:300px;overflow:scroll;\\\"><p><strong style=\\\"text-decoration:underline;\\\">HPO_sourceFiles<\\/strong><\\/p> <ul> <li><strong>url<\\/strong><\\/li> <li><strong>current<\\/strong><\\/li> <\\/ul><\\/div>\",\"<div style=\\\"max-width:400px; max-height:300px;overflow:scroll;\\\"><p><strong style=\\\"text-decoration:underline;\\\">HPO_synonyms<\\/strong><\\/p> <ul> <li><strong>id<\\/strong><\\/li> <li><strong>synonym<\\/strong><\\/li> <li><strong>type<\\/strong><\\/li> <\\/ul><\\/div>\"],\"shape\":[\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\"],\"font.multi\":[true,true,true,true,true,true,true,true,true],\"font.align\":[\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\"],\"x\":[-104.4016762137274,106.0208461613055,100.3870710489813,-99.10446133742337,244.4183022858425,-244.5438932245993,-0.02911404586314337,-250,250],\"y\":[243.7513924887712,-247.7542258037631,250,-250,104.1770823904481,-106.1991475190624,-1.416243926851302,99.42916001009056,-100.6329254480559],\"color.background\":[\"lightgrey\",\"lightgrey\",\"lightgrey\",\"lightgrey\",\"lightgrey\",\"lightgrey\",\"lightgrey\",\"lightgrey\",\"lightgrey\"],\"color.border\":[\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\"],\"color.highlight.border\":[\"orange\",\"orange\",\"orange\",\"orange\",\"orange\",\"orange\",\"orange\",\"orange\",\"orange\"],\"color.highlight.background\":[\"lightgrey\",\"lightgrey\",\"lightgrey\",\"lightgrey\",\"lightgrey\",\"lightgrey\",\"lightgrey\",\"lightgrey\",\"lightgrey\"],\"id\":[\"HPO_altId\",\"HPO_descendants\",\"HPO_diseaseHP\",\"HPO_diseaseSynonyms\",\"HPO_diseases\",\"HPO_hp\",\"HPO_parents\",\"HPO_sourceFiles\",\"HPO_synonyms\"]},\"edges\":{\"id\":[],\"from\":[],\"to\":[]},\"nodesToDataframe\":true,\"edgesToDataframe\":true,\"options\":{\"width\":\"100%\",\"height\":\"100%\",\"nodes\":{\"shape\":\"dot\",\"borderWidth\":2,\"labelHighlightBold\":false},\"manipulation\":{\"enabled\":false},\"edges\":{\"width\":2,\"selectionWidth\":2},\"interaction\":{\"multiselect\":true,\"zoomSpeed\":1},\"layout\":{\"randomSeed\":2},\"physics\":{\"enabled\":false}},\"groups\":null,\"width\":null,\"height\":null,\"idselection\":{\"enabled\":false},\"byselection\":{\"enabled\":false},\"main\":null,\"submain\":null,\"footer\":null,\"background\":\"rgba(0, 0, 0, 0)\",\"tooltipStay\":300,\"tooltipStyle\":\"position: fixed;visibility:hidden;padding: 5px;white-space: nowrap;font-family: verdana;font-size:14px;font-color:#000000;background-color: #f5f4ed;-moz-border-radius: 3px;-webkit-border-radius: 3px;border-radius: 3px;border: 1px solid #808074;box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);\"},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://patzaw.github.io/ReDaMoR/reference/format.RelTableModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Format a RelTableModel object for printing — format.RelTableModel","title":"Format a RelTableModel object for printing — format.RelTableModel","text":"Format RelTableModel object printing","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/format.RelTableModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format a RelTableModel object for printing — format.RelTableModel","text":"","code":"# S3 method for RelTableModel format(x, ...)"},{"path":"https://patzaw.github.io/ReDaMoR/reference/format.RelTableModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format a RelTableModel object for printing — format.RelTableModel","text":"x RelTableModel object ... generics compatibility (used)","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/format.RelTableModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format a RelTableModel object for printing — format.RelTableModel","text":"single character","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/format_confrontation_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Format confrontation report for printing in console — format_confrontation_report","title":"Format confrontation report for printing in console — format_confrontation_report","text":"Format confrontation report printing console","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/format_confrontation_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format confrontation report for printing in console — format_confrontation_report","text":"","code":"format_confrontation_report(cr, title = \"Model\")"},{"path":"https://patzaw.github.io/ReDaMoR/reference/format_confrontation_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format confrontation report for printing in console — format_confrontation_report","text":"cr confrontation report confront_data title character single value corresponding report title (e.g. database/model name)","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/format_confrontation_report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format confrontation report for printing in console — format_confrontation_report","text":"","code":"## Read the model ---- hpo_from_sql <- read_SQL_data_model(    system.file(\"examples/HPO-model.sql\", package=\"ReDaMoR\") ) #> Warning: l param is deprecated and will probably removed in the future #> Warning: l param is deprecated and will probably removed in the future #> Warning: l param is deprecated and will probably removed in the future #> Warning: l param is deprecated and will probably removed in the future #> Warning: l param is deprecated and will probably removed in the future #> Warning: l param is deprecated and will probably removed in the future #> Warning: l param is deprecated and will probably removed in the future #> Warning: l param is deprecated and will probably removed in the future #> Warning: l param is deprecated and will probably removed in the future ## Confront to data ---- confrontation_report <- confront_data(    hpo_from_sql,    path=list.files(       system.file(\"examples/HPO-subset\", package=\"ReDaMoR\"),       full.names=TRUE    ),    verbose=FALSE,    returnData=TRUE ) ## Show the report in console ---- format_confrontation_report(confrontation_report) %>% cat() #> Model #> SUCCESS #>  #> Check configuration #>    - Optional checks: unique, not nullable, foreign keys #>    - Maximum number of records: Inf #>  #> HPO_hp #> SUCCESS #> Field issues or warnings #>    - description: SUCCESS Missing values 117/500 = 23% #>  ## Format the report using markdown ---- format_confrontation_report_md(confrontation_report) %>% cat() #>  #> # Model #>  #> <span style=\"background-color:green; color:black; padding:2px;\">SUCCESS<\/span> #>  #> ## Check configuration #>  #> - **Optional checks**: unique, not nullable, foreign keys #> - **Maximum number of records**: Inf #>  #>  #> ## HPO_hp #>  #> <span style=\"background-color:green; color:black; padding:2px;\">SUCCESS<\/span> #>  #>  #> ### Field issues or warnings #>  #> - description: <span style=\"background-color:green; color:black; padding:2px;\">SUCCESS<\/span> <span style=\"background-color:#FFBB33; color:white; padding:2px;\">Missing values 117/500 = 23%<\/span> #>"},{"path":"https://patzaw.github.io/ReDaMoR/reference/format_confrontation_report_md.html","id":null,"dir":"Reference","previous_headings":"","what":"Format confrontation report in markdown format — format_confrontation_report_md","title":"Format confrontation report in markdown format — format_confrontation_report_md","text":"Format confrontation report markdown format","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/format_confrontation_report_md.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format confrontation report in markdown format — format_confrontation_report_md","text":"","code":"format_confrontation_report_md(   cr,   title = \"Model\",   level = 0,   numbered = TRUE,   bgSuccess = \"green\",   txSuccess = \"black\",   bgFailure = \"red\",   txFailure = \"white\",   bgMessage = \"#FFBB33\",   txMessage = \"white\" )"},{"path":"https://patzaw.github.io/ReDaMoR/reference/format_confrontation_report_md.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format confrontation report in markdown format — format_confrontation_report_md","text":"cr confrontation report confront_data title character single value corresponding report level rmarkdown level document hierarchy (default:0 ==> highest). integer 0 4. numbered logical. TRUE (default) sections part document numbering. bgSuccess background color SUCCESS txSuccess text color SUCCESS bgFailure background color FAILURE txFailure text color FAILURE bgMessage background color warning message txMessage text color warning message","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/format_confrontation_report_md.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format confrontation report in markdown format — format_confrontation_report_md","text":"","code":"## Read the model ---- hpo_from_sql <- read_SQL_data_model(    system.file(\"examples/HPO-model.sql\", package=\"ReDaMoR\") ) #> Warning: l param is deprecated and will probably removed in the future #> Warning: l param is deprecated and will probably removed in the future #> Warning: l param is deprecated and will probably removed in the future #> Warning: l param is deprecated and will probably removed in the future #> Warning: l param is deprecated and will probably removed in the future #> Warning: l param is deprecated and will probably removed in the future #> Warning: l param is deprecated and will probably removed in the future #> Warning: l param is deprecated and will probably removed in the future #> Warning: l param is deprecated and will probably removed in the future ## Confront to data ---- confrontation_report <- confront_data(    hpo_from_sql,    path=list.files(       system.file(\"examples/HPO-subset\", package=\"ReDaMoR\"),       full.names=TRUE    ),    verbose=FALSE,    returnData=TRUE ) ## Show the report in console ---- format_confrontation_report(confrontation_report) %>% cat() #> Model #> SUCCESS #>  #> Check configuration #>    - Optional checks: unique, not nullable, foreign keys #>    - Maximum number of records: Inf #>  #> HPO_hp #> SUCCESS #> Field issues or warnings #>    - description: SUCCESS Missing values 117/500 = 23% #>  ## Format the report using markdown ---- format_confrontation_report_md(confrontation_report) %>% cat() #>  #> # Model #>  #> <span style=\"background-color:green; color:black; padding:2px;\">SUCCESS<\/span> #>  #> ## Check configuration #>  #> - **Optional checks**: unique, not nullable, foreign keys #> - **Maximum number of records**: Inf #>  #>  #> ## HPO_hp #>  #> <span style=\"background-color:green; color:black; padding:2px;\">SUCCESS<\/span> #>  #>  #> ### Field issues or warnings #>  #> - description: <span style=\"background-color:green; color:black; padding:2px;\">SUCCESS<\/span> <span style=\"background-color:#FFBB33; color:white; padding:2px;\">Missing values 117/500 = 23%<\/span> #>"},{"path":"https://patzaw.github.io/ReDaMoR/reference/fromDBM.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list of 5 normalized tibbles in a RelDataModel object — fromDBM","title":"Convert a list of 5 normalized tibbles in a RelDataModel object — fromDBM","text":"Convert list 5 normalized tibbles RelDataModel object","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/fromDBM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list of 5 normalized tibbles in a RelDataModel object — fromDBM","text":"","code":"fromDBM(dbm)"},{"path":"https://patzaw.github.io/ReDaMoR/reference/fromDBM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list of 5 normalized tibbles in a RelDataModel object — fromDBM","text":"dbm list following tibbles: tables: tables model following information name: name table x: x coordinate table model drawing (NA ==> position undefined) y: y coordinate table model drawing (NA ==> position undefined) color: color table model drawing (NA ==> undefined) comment: comment table fields: fields model following information name: name field type: type field nullable: logical indicating field can null comment: comment field table: name table field belongs primaryKeys: primary keys model following information table: name relevant table field: name field participating primary key foreignKeys: foreign keys model following information table: name referring table fki: identifier foreign key (referring table) field: name referring field refTable: name referred table refField: name referred field indexes: indexes model following information table: name relevant table idx: identifier index (table) field: name field participating index unique: logical indicating field unique","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/fromDBM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list of 5 normalized tibbles in a RelDataModel object — fromDBM","text":"RelDataModel object","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/get_foreign_keys.RelDataModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Get foreign keys in RelDataModel — get_foreign_keys.RelDataModel","title":"Get foreign keys in RelDataModel — get_foreign_keys.RelDataModel","text":"Get foreign keys RelDataModel","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/get_foreign_keys.RelDataModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get foreign keys in RelDataModel — get_foreign_keys.RelDataModel","text":"","code":"# S3 method for RelDataModel get_foreign_keys(x)"},{"path":"https://patzaw.github.io/ReDaMoR/reference/get_foreign_keys.RelDataModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get foreign keys in RelDataModel — get_foreign_keys.RelDataModel","text":"x RelDataModel","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/get_foreign_keys.RelDataModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get foreign keys in RelDataModel — get_foreign_keys.RelDataModel","text":"tibble following fields: : origin key ff: key fields : target key tf: key fields fmin: minimum cardinality fmax: maximum cardinality tmin: minimum cardinality tmax: maximum cardinality ","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/get_foreign_keys.RelTableModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Get foreign keys from RelTableModel — get_foreign_keys.RelTableModel","title":"Get foreign keys from RelTableModel — get_foreign_keys.RelTableModel","text":"Get foreign keys RelTableModel","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/get_foreign_keys.RelTableModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get foreign keys from RelTableModel — get_foreign_keys.RelTableModel","text":"","code":"# S3 method for RelTableModel get_foreign_keys(x)"},{"path":"https://patzaw.github.io/ReDaMoR/reference/get_foreign_keys.RelTableModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get foreign keys from RelTableModel — get_foreign_keys.RelTableModel","text":"x RelTableModel","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/get_foreign_keys.RelTableModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get foreign keys from RelTableModel — get_foreign_keys.RelTableModel","text":"tibble following fields: : origin key ff: key fields : target key tf: key fields fmin: minimum cardinality fmax: maximum cardinality tmin: minimum cardinality tmax: maximum cardinality ","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/get_foreign_keys.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a foreign key table from an object — get_foreign_keys","title":"Get a foreign key table from an object — get_foreign_keys","text":"Get foreign key table object","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/get_foreign_keys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a foreign key table from an object — get_foreign_keys","text":"","code":"get_foreign_keys(x)"},{"path":"https://patzaw.github.io/ReDaMoR/reference/get_foreign_keys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a foreign key table from an object — get_foreign_keys","text":"x RelTableModel RelDataModel","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/get_foreign_keys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a foreign key table from an object — get_foreign_keys","text":"tibble following fields: : origin key ff: key fields : target key tf: key fields fmin: minimum cardinality fmax: maximum cardinality tmin: minimum cardinality tmax: maximum cardinality ","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/identical_RelDataModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if two RelDataModel are identical — identical_RelDataModel","title":"Check if two RelDataModel are identical — identical_RelDataModel","text":"Check two RelDataModel identical","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/identical_RelDataModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if two RelDataModel are identical — identical_RelDataModel","text":"","code":"identical_RelDataModel(x, y, ...)"},{"path":"https://patzaw.github.io/ReDaMoR/reference/identical_RelDataModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if two RelDataModel are identical — identical_RelDataModel","text":"x RelDataModel y RelDataModel ... additional parameters identical_RelTableModel()","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/identical_RelDataModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if two RelDataModel are identical — identical_RelDataModel","text":"logical: TRUE 2 models identical","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/identical_RelTableModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if two RelTableModel are identical — identical_RelTableModel","title":"Check if two RelTableModel are identical — identical_RelTableModel","text":"Check two RelTableModel identical","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/identical_RelTableModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if two RelTableModel are identical — identical_RelTableModel","text":"","code":"identical_RelTableModel(x, y, includeDisplay = TRUE)"},{"path":"https://patzaw.github.io/ReDaMoR/reference/identical_RelTableModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if two RelTableModel are identical — identical_RelTableModel","text":"x RelTableModel y RelTableModel includeDisplay single logical (default: TRUE) indicating display included comparison","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/identical_RelTableModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if two RelTableModel are identical — identical_RelTableModel","text":"logical: TRUE 2 models identical","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/index_table.html","id":null,"dir":"Reference","previous_headings":"","what":"List indexes of a RelTableModel object — index_table","title":"List indexes of a RelTableModel object — index_table","text":"List indexes RelTableModel object","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/index_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List indexes of a RelTableModel object — index_table","text":"","code":"index_table(x)"},{"path":"https://patzaw.github.io/ReDaMoR/reference/index_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List indexes of a RelTableModel object — index_table","text":"x RelTableModel object","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/index_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List indexes of a RelTableModel object — index_table","text":"tibble following columns: index: integer corresponding index number field: character corresponding field belonging index unique: logical indicating uniqueness field","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/is.MatrixModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the object is a RelTableModel matrix object — is.MatrixModel","title":"Check if the object is a RelTableModel matrix object — is.MatrixModel","text":"matrix model special RelTableModel object 3 3 fields: 2 types 'row' 'column' 3rd choice.","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/is.MatrixModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the object is a RelTableModel matrix object — is.MatrixModel","text":"","code":"is.MatrixModel(x)"},{"path":"https://patzaw.github.io/ReDaMoR/reference/is.MatrixModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the object is a RelTableModel matrix object — is.MatrixModel","text":"x object","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/is.MatrixModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the object is a RelTableModel matrix object — is.MatrixModel","text":"single logical: TRUE x RelTableModel matrix object","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/is.RelDataModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the object is a RelDataModel object — is.RelDataModel","title":"Check if the object is a RelDataModel object — is.RelDataModel","text":"Check object  RelDataModel object","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/is.RelDataModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the object is a RelDataModel object — is.RelDataModel","text":"","code":"is.RelDataModel(x)"},{"path":"https://patzaw.github.io/ReDaMoR/reference/is.RelDataModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the object is a RelDataModel object — is.RelDataModel","text":"x object","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/is.RelDataModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the object is a RelDataModel object — is.RelDataModel","text":"single logical: TRUE x RelDataModel object","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/is.RelTableModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the object is a RelTableModel object — is.RelTableModel","title":"Check if the object is a RelTableModel object — is.RelTableModel","text":"Check object  RelTableModel object","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/is.RelTableModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the object is a RelTableModel object — is.RelTableModel","text":"","code":"is.RelTableModel(x)"},{"path":"https://patzaw.github.io/ReDaMoR/reference/is.RelTableModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the object is a RelTableModel object — is.RelTableModel","text":"x object","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/is.RelTableModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the object is a RelTableModel object — is.RelTableModel","text":"single logical: TRUE x RelTableModel object","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/is_MM.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify if a file is in MatrixMarket text format — is_MM","title":"Identify if a file is in MatrixMarket text format — is_MM","text":"Identify file MatrixMarket text format","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/is_MM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify if a file is in MatrixMarket text format — is_MM","text":"","code":"is_MM(file)"},{"path":"https://patzaw.github.io/ReDaMoR/reference/is_MM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify if a file is in MatrixMarket text format — is_MM","text":"file file read","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/is_MM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify if a file is in MatrixMarket text format — is_MM","text":"logical. FALSE, first line file returned attribute named \"r1\": attr(is_MM, \"r1\")","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/lengths.html","id":null,"dir":"Reference","previous_headings":"","what":"Lengths of object elements — lengths","title":"Lengths of object elements — lengths","text":"Lengths object elements","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/lengths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lengths of object elements — lengths","text":"","code":"lengths(x, use.names = TRUE)"},{"path":"https://patzaw.github.io/ReDaMoR/reference/lengths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lengths of object elements — lengths","text":"x object. method implemented object, base::lengths() function used. use.names logical indicating result inherit names x.","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/lengths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lengths of object elements — lengths","text":"non-negative integer length length(x), except element length 2^31 - 1 elements, returns double vector. use.names true, names taken names x, .","code":""},{"path":[]},{"path":"https://patzaw.github.io/ReDaMoR/reference/list_autosaved_RelDataModel.html","id":null,"dir":"Reference","previous_headings":"","what":"List autosaved RelDataModel — list_autosaved_RelDataModel","title":"List autosaved RelDataModel — list_autosaved_RelDataModel","text":"List autosaved RelDataModel","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/list_autosaved_RelDataModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List autosaved RelDataModel — list_autosaved_RelDataModel","text":"","code":"list_autosaved_RelDataModel()"},{"path":[]},{"path":"https://patzaw.github.io/ReDaMoR/reference/list_type_ref.html","id":null,"dir":"Reference","previous_headings":"","what":"List supported types references — list_type_ref","title":"List supported types references — list_type_ref","text":"List supported types references","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/list_type_ref.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List supported types references — list_type_ref","text":"","code":"list_type_ref()"},{"path":"https://patzaw.github.io/ReDaMoR/reference/modelToVn.html","id":null,"dir":"Reference","previous_headings":"","what":"VisNetwork representation of a RelDataModel object — modelToVn","title":"VisNetwork representation of a RelDataModel object — modelToVn","text":"VisNetwork representation RelDataModel object","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/modelToVn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"VisNetwork representation of a RelDataModel object — modelToVn","text":"","code":"modelToVn(   model,   color = \"lightgrey\",   border = \"black\",   highlightBorder = \"orange\" )"},{"path":"https://patzaw.github.io/ReDaMoR/reference/modelToVn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"VisNetwork representation of a RelDataModel object — modelToVn","text":"model RelDataModel color default table background color border border color (single character) highlightBorder color highlighted borders Internal function","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/model_relational_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Relational data modeler GUI — model_relational_data","title":"Relational data modeler GUI — model_relational_data","text":"Relational data modeler GUI","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/model_relational_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Relational data modeler GUI — model_relational_data","text":"","code":"model_relational_data(   modelInput = RelDataModel(list()),   fromR = interactive(),   defaultColor = \"#D9D9D9\",   availableColors = c(\"#9BC8FE\", \"#F67FC4\", \"#C6BDF1\", \"#DFFB86\", \"#F8DEC3\", \"#8FE6E0\",     \"#FEFE8F\", \"#FAC6DC\", \"#A9ECC9\"),   example = system.file(\"examples/HPO-model.json\", package = utils::packageName()),   forceIntro = FALSE )"},{"path":"https://patzaw.github.io/ReDaMoR/reference/model_relational_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relational data modeler GUI — model_relational_data","text":"modelInput RelDataModel start fromR logical indicating application launched R defaultColor single color indicating default table color availableColors character possible colors tables example file path sql json model forceIntro TRUE help tour start application launched (default: FALSE)","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/model_relational_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Relational data modeler GUI — model_relational_data","text":"RelDataModel designed GUI.","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/norm_type_ref.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize type names — norm_type_ref","title":"Normalize type names — norm_type_ref","text":"Normalize type names","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/norm_type_ref.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize type names — norm_type_ref","text":"","code":"norm_type_ref(x, typeRef, ignore.case = TRUE)"},{"path":"https://patzaw.github.io/ReDaMoR/reference/norm_type_ref.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize type names — norm_type_ref","text":"x character vector normalize typeRef character vector length one: type reference (list_type_ref) ignore.case case ignored (default: TRUE)","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/order_fields.html","id":null,"dir":"Reference","previous_headings":"","what":"Order fields in a table in a RelDataModel — order_fields","title":"Order fields in a table in a RelDataModel — order_fields","text":"Order fields table RelDataModel","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/order_fields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Order fields in a table in a RelDataModel — order_fields","text":"","code":"order_fields(x, tableName, order)"},{"path":"https://patzaw.github.io/ReDaMoR/reference/order_fields.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Order fields in a table in a RelDataModel — order_fields","text":"x RelDataModel tableName name table modify (single character) order vector integers (1:number_of_fields)","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/order_fields.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Order fields in a table in a RelDataModel — order_fields","text":"RelDataModel","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/plot.RelDataModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a RelDataModel object — plot.RelDataModel","title":"Plot a RelDataModel object — plot.RelDataModel","text":"function draw visNetwork RelDataModel.","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/plot.RelDataModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a RelDataModel object — plot.RelDataModel","text":"","code":"# S3 method for RelDataModel plot(x, ...)"},{"path":"https://patzaw.github.io/ReDaMoR/reference/plot.RelDataModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a RelDataModel object — plot.RelDataModel","text":"x RelDataModel ... additional parameters: color default table background color border border color (single character) highlightBorder color highlighted borders","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/plot.RelDataModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a RelDataModel object — plot.RelDataModel","text":"","code":"## Read the model ---- hpo_model <- read_json_data_model(    system.file(\"examples/HPO-model.json\", package=\"ReDaMoR\") ) ## Plot the model ---- plot(hpo_model)  {\"x\":{\"nodes\":{\"tableName\":[\"HPO_hp\",\"HPO_altId\",\"HPO_sourceFiles\",\"HPO_diseases\",\"HPO_diseaseHP\",\"HPO_diseaseSynonyms\",\"HPO_parents\",\"HPO_descendants\",\"HPO_synonyms\"],\"label\":[\"<b>HPO_hp<\\/b>\\n    - <b>*id<\\/b> {character - uidx.1}\\n    - name {character}\\n    - (description {character})\\n    - level {integer}\",\"<b>HPO_altId<\\/b>\\n    - id {character - idx.1}\\n    - alt {character}\",\"<b>HPO_sourceFiles<\\/b>\\n    - <b>*url<\\/b> {character - uidx.1}\\n    - current {Date}\",\"<b>HPO_diseases<\\/b>\\n    - <b>db<\\/b> {character - uidx.1}\\n    - <b>id<\\/b> {character - uidx.1}\\n    - label {character}\",\"<b>HPO_diseaseHP<\\/b>\\n    - db {character - idx.2}\\n    - id {character - idx.2}\\n    - hp {character - idx.1}\",\"<b>HPO_diseaseSynonyms<\\/b>\\n    - db {character - idx.1}\\n    - id {character - idx.1}\\n    - synonym {character}\\n    - preferred {logical}\",\"<b>HPO_parents<\\/b>\\n    - id {character - idx.1}\\n    - parent {character - idx.2}\",\"<b>HPO_descendants<\\/b>\\n    - id {character - idx.1}\\n    - descendant {character - idx.2}\",\"<b>HPO_synonyms<\\/b>\\n    - id {character}\\n    - synonym {character}\\n    - type {character}\"],\"title\":[\"<div style=\\\"max-width:400px; max-height:300px;overflow:scroll;\\\"><p><strong style=\\\"text-decoration:underline;\\\">HPO_hp<\\/strong> (Human phenotypes (HP))<\\/p> <ul> <li><strong>id<\\/strong>: HP identifier<\\/li> <li><strong>name<\\/strong>: HP name<\\/li> <li><strong>description<\\/strong>: HP description<\\/li> <li><strong>level<\\/strong><\\/li> <\\/ul><\\/div>\",\"<div style=\\\"max-width:400px; max-height:300px;overflow:scroll;\\\"><p><strong style=\\\"text-decoration:underline;\\\">HPO_altId<\\/strong> (Alternative HP identifiers)<\\/p> <ul> <li><strong>id<\\/strong>: HP identifier<\\/li> <li><strong>alt<\\/strong>: Alternative identifier<\\/li> <\\/ul><\\/div>\",\"<div style=\\\"max-width:400px; max-height:300px;overflow:scroll;\\\"><p><strong style=\\\"text-decoration:underline;\\\">HPO_sourceFiles<\\/strong> (Files from which data were extracted)<\\/p> <ul> <li><strong>url<\\/strong>: Source file URL<\\/li> <li><strong>current<\\/strong>: The date of the current source file<\\/li> <\\/ul><\\/div>\",\"<div style=\\\"max-width:400px; max-height:300px;overflow:scroll;\\\"><p><strong style=\\\"text-decoration:underline;\\\">HPO_diseases<\\/strong> (Diseases)<\\/p> <ul> <li><strong>db<\\/strong>: Disease database<\\/li> <li><strong>id<\\/strong>: Disease ID<\\/li> <li><strong>label<\\/strong>: Disease lable (preferred synonym)<\\/li> <\\/ul><\\/div>\",\"<div style=\\\"max-width:400px; max-height:300px;overflow:scroll;\\\"><p><strong style=\\\"text-decoration:underline;\\\">HPO_diseaseHP<\\/strong> (HP presented by diseases)<\\/p> <ul> <li><strong>db<\\/strong>: Disease database<\\/li> <li><strong>id<\\/strong>: Disease ID<\\/li> <li><strong>hp<\\/strong>: HP identifier<\\/li> <\\/ul><\\/div>\",\"<div style=\\\"max-width:400px; max-height:300px;overflow:scroll;\\\"><p><strong style=\\\"text-decoration:underline;\\\">HPO_diseaseSynonyms<\\/strong> (Disease synonyms)<\\/p> <ul> <li><strong>db<\\/strong>: Disease database<\\/li> <li><strong>id<\\/strong>: Disease ID<\\/li> <li><strong>synonym<\\/strong>: Disease synonym<\\/li> <li><strong>preferred<\\/strong>: Is synonym preferred<\\/li> <\\/ul><\\/div>\",\"<div style=\\\"max-width:400px; max-height:300px;overflow:scroll;\\\"><p><strong style=\\\"text-decoration:underline;\\\">HPO_parents<\\/strong> (Direct parents of human phenotypes)<\\/p> <ul> <li><strong>id<\\/strong>: HP identifier<\\/li> <li><strong>parent<\\/strong>: Parent identifier<\\/li> <\\/ul><\\/div>\",\"<div style=\\\"max-width:400px; max-height:300px;overflow:scroll;\\\"><p><strong style=\\\"text-decoration:underline;\\\">HPO_descendants<\\/strong> (Indirect descendants of human phenotypes)<\\/p> <ul> <li><strong>id<\\/strong>: HP identifier<\\/li> <li><strong>descendant<\\/strong>: Descendant (child or child of child...) HP ID<\\/li> <\\/ul><\\/div>\",\"<div style=\\\"max-width:400px; max-height:300px;overflow:scroll;\\\"><p><strong style=\\\"text-decoration:underline;\\\">HPO_synonyms<\\/strong> (Synonyms of human phenotypes)<\\/p> <ul> <li><strong>id<\\/strong>: HP identifier<\\/li> <li><strong>synonym<\\/strong>: HP synonym<\\/li> <li><strong>type<\\/strong>: Synonym type<\\/li> <\\/ul><\\/div>\"],\"shape\":[\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\"],\"font.multi\":[true,true,true,true,true,true,true,true,true],\"font.align\":[\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\"],\"x\":[-167,-154,262,320,75,321,-328,-101,-360],\"y\":[-177,-38,-336,-170,-172,-24,-331,-360,-36],\"color.background\":[\"#9BC8FE\",\"#9BC8FE\",\"#D9D9D9\",\"#DFFB86\",\"#D9D9D9\",\"#DFFB86\",\"#F67FC4\",\"#F67FC4\",\"#9BC8FE\"],\"color.border\":[\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\"],\"color.highlight.border\":[\"orange\",\"orange\",\"orange\",\"orange\",\"orange\",\"orange\",\"orange\",\"orange\",\"orange\"],\"color.highlight.background\":[\"#9BC8FE\",\"#9BC8FE\",\"#D9D9D9\",\"#DFFB86\",\"#D9D9D9\",\"#DFFB86\",\"#F67FC4\",\"#F67FC4\",\"#9BC8FE\"],\"id\":[\"HPO_hp\",\"HPO_altId\",\"HPO_sourceFiles\",\"HPO_diseases\",\"HPO_diseaseHP\",\"HPO_diseaseSynonyms\",\"HPO_parents\",\"HPO_descendants\",\"HPO_synonyms\"]},\"edges\":{\"id\":[\"HPO_altId->HPO_hp: id->id\",\"HPO_diseaseHP->HPO_hp: hp->id\",\"HPO_diseaseHP->HPO_diseases: db->db && id->id\",\"HPO_diseaseSynonyms->HPO_diseases: db->db && id->id\",\"HPO_parents->HPO_hp: id->id\",\"HPO_parents->HPO_hp: parent->id\",\"HPO_descendants->HPO_hp: id->id\",\"HPO_descendants->HPO_hp: descendant->id\",\"HPO_synonyms->HPO_hp: id->id\"],\"to\":[\"HPO_hp\",\"HPO_hp\",\"HPO_diseases\",\"HPO_diseases\",\"HPO_hp\",\"HPO_hp\",\"HPO_hp\",\"HPO_hp\",\"HPO_hp\"],\"title\":[\"<table style=\\\"border: 1px solid black; padding:1px;\\\"><tr style=\\\"border: 1px solid black; padding:1px;\\\"><th style=\\\"border: 1px solid black; padding:1px;text-align:center;\\\">HPO_altId<br>(0..n)<\\/th><th style=\\\"border: 1px solid black; padding:1px;text-align:center;\\\">HPO_hp<br>(1..1)<\\/th><\\/tr><tr style=\\\"border: 1px solid black; padding:1px;\\\"><td style=\\\"border: 1px solid black; padding:1px;\\\">id<\\/td><td style=\\\"border: 1px solid black; padding:1px;\\\">id<\\/td><\\/tr><\\/table>\",\"<table style=\\\"border: 1px solid black; padding:1px;\\\"><tr style=\\\"border: 1px solid black; padding:1px;\\\"><th style=\\\"border: 1px solid black; padding:1px;text-align:center;\\\">HPO_diseaseHP<br>(0..n)<\\/th><th style=\\\"border: 1px solid black; padding:1px;text-align:center;\\\">HPO_hp<br>(1..1)<\\/th><\\/tr><tr style=\\\"border: 1px solid black; padding:1px;\\\"><td style=\\\"border: 1px solid black; padding:1px;\\\">hp<\\/td><td style=\\\"border: 1px solid black; padding:1px;\\\">id<\\/td><\\/tr><\\/table>\",\"<table style=\\\"border: 1px solid black; padding:1px;\\\"><tr style=\\\"border: 1px solid black; padding:1px;\\\"><th style=\\\"border: 1px solid black; padding:1px;text-align:center;\\\">HPO_diseaseHP<br>(0..n)<\\/th><th style=\\\"border: 1px solid black; padding:1px;text-align:center;\\\">HPO_diseases<br>(1..1)<\\/th><\\/tr><tr style=\\\"border: 1px solid black; padding:1px;\\\"><td style=\\\"border: 1px solid black; padding:1px;\\\">db<\\/td><td style=\\\"border: 1px solid black; padding:1px;\\\">db<\\/td><\\/tr><tr style=\\\"border: 1px solid black; padding:1px;\\\"><td style=\\\"border: 1px solid black; padding:1px;\\\">id<\\/td><td style=\\\"border: 1px solid black; padding:1px;\\\">id<\\/td><\\/tr><\\/table>\",\"<table style=\\\"border: 1px solid black; padding:1px;\\\"><tr style=\\\"border: 1px solid black; padding:1px;\\\"><th style=\\\"border: 1px solid black; padding:1px;text-align:center;\\\">HPO_diseaseSynonyms<br>(0..n)<\\/th><th style=\\\"border: 1px solid black; padding:1px;text-align:center;\\\">HPO_diseases<br>(1..1)<\\/th><\\/tr><tr style=\\\"border: 1px solid black; padding:1px;\\\"><td style=\\\"border: 1px solid black; padding:1px;\\\">db<\\/td><td style=\\\"border: 1px solid black; padding:1px;\\\">db<\\/td><\\/tr><tr style=\\\"border: 1px solid black; padding:1px;\\\"><td style=\\\"border: 1px solid black; padding:1px;\\\">id<\\/td><td style=\\\"border: 1px solid black; padding:1px;\\\">id<\\/td><\\/tr><\\/table>\",\"<table style=\\\"border: 1px solid black; padding:1px;\\\"><tr style=\\\"border: 1px solid black; padding:1px;\\\"><th style=\\\"border: 1px solid black; padding:1px;text-align:center;\\\">HPO_parents<br>(0..n)<\\/th><th style=\\\"border: 1px solid black; padding:1px;text-align:center;\\\">HPO_hp<br>(1..1)<\\/th><\\/tr><tr style=\\\"border: 1px solid black; padding:1px;\\\"><td style=\\\"border: 1px solid black; padding:1px;\\\">id<\\/td><td style=\\\"border: 1px solid black; padding:1px;\\\">id<\\/td><\\/tr><\\/table>\",\"<table style=\\\"border: 1px solid black; padding:1px;\\\"><tr style=\\\"border: 1px solid black; padding:1px;\\\"><th style=\\\"border: 1px solid black; padding:1px;text-align:center;\\\">HPO_parents<br>(0..n)<\\/th><th style=\\\"border: 1px solid black; padding:1px;text-align:center;\\\">HPO_hp<br>(1..1)<\\/th><\\/tr><tr style=\\\"border: 1px solid black; padding:1px;\\\"><td style=\\\"border: 1px solid black; padding:1px;\\\">parent<\\/td><td style=\\\"border: 1px solid black; padding:1px;\\\">id<\\/td><\\/tr><\\/table>\",\"<table style=\\\"border: 1px solid black; padding:1px;\\\"><tr style=\\\"border: 1px solid black; padding:1px;\\\"><th style=\\\"border: 1px solid black; padding:1px;text-align:center;\\\">HPO_descendants<br>(0..n)<\\/th><th style=\\\"border: 1px solid black; padding:1px;text-align:center;\\\">HPO_hp<br>(1..1)<\\/th><\\/tr><tr style=\\\"border: 1px solid black; padding:1px;\\\"><td style=\\\"border: 1px solid black; padding:1px;\\\">id<\\/td><td style=\\\"border: 1px solid black; padding:1px;\\\">id<\\/td><\\/tr><\\/table>\",\"<table style=\\\"border: 1px solid black; padding:1px;\\\"><tr style=\\\"border: 1px solid black; padding:1px;\\\"><th style=\\\"border: 1px solid black; padding:1px;text-align:center;\\\">HPO_descendants<br>(0..n)<\\/th><th style=\\\"border: 1px solid black; padding:1px;text-align:center;\\\">HPO_hp<br>(1..1)<\\/th><\\/tr><tr style=\\\"border: 1px solid black; padding:1px;\\\"><td style=\\\"border: 1px solid black; padding:1px;\\\">descendant<\\/td><td style=\\\"border: 1px solid black; padding:1px;\\\">id<\\/td><\\/tr><\\/table>\",\"<table style=\\\"border: 1px solid black; padding:1px;\\\"><tr style=\\\"border: 1px solid black; padding:1px;\\\"><th style=\\\"border: 1px solid black; padding:1px;text-align:center;\\\">HPO_synonyms<br>(0..n)<\\/th><th style=\\\"border: 1px solid black; padding:1px;text-align:center;\\\">HPO_hp<br>(1..1)<\\/th><\\/tr><tr style=\\\"border: 1px solid black; padding:1px;\\\"><td style=\\\"border: 1px solid black; padding:1px;\\\">id<\\/td><td style=\\\"border: 1px solid black; padding:1px;\\\">id<\\/td><\\/tr><\\/table>\"],\"ff\":[\"id\",\"hp\",[\"db\",\"id\"],[\"db\",\"id\"],\"id\",\"parent\",\"id\",\"descendant\",\"id\"],\"tf\":[\"id\",\"id\",[\"db\",\"id\"],[\"db\",\"id\"],\"id\",\"id\",\"id\",\"id\",\"id\"],\"from\":[\"HPO_altId\",\"HPO_diseaseHP\",\"HPO_diseaseHP\",\"HPO_diseaseSynonyms\",\"HPO_parents\",\"HPO_parents\",\"HPO_descendants\",\"HPO_descendants\",\"HPO_synonyms\"],\"arrows\":[\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\"],\"font.align\":[\"bottom\",\"bottom\",\"bottom\",\"bottom\",\"bottom\",\"bottom\",\"bottom\",\"bottom\",\"bottom\"],\"smooth.type\":[\"curvedCCW\",\"curvedCCW\",\"curvedCCW\",\"curvedCCW\",\"curvedCCW\",\"curvedCCW\",\"curvedCCW\",\"curvedCCW\",\"curvedCCW\"],\"smooth.roundness\":[-0,-0,-0,-0,0.2,-0.2,-0.2,0.2,0],\"selfReferenceSize\":[30,30,30,30,30,50,30,50,30],\"uef\":[\"HPO_altId\",\"HPO_diseaseHP\",\"HPO_diseaseHP\",\"HPO_diseaseSynonyms\",\"HPO_hp\",\"HPO_hp\",\"HPO_descendants\",\"HPO_descendants\",\"HPO_hp\"],\"uet\":[\"HPO_hp\",\"HPO_hp\",\"HPO_diseases\",\"HPO_diseases\",\"HPO_parents\",\"HPO_parents\",\"HPO_hp\",\"HPO_hp\",\"HPO_synonyms\"],\"ue\":[\"HPO_altId<->HPO_hp\",\"HPO_diseaseHP<->HPO_hp\",\"HPO_diseaseHP<->HPO_diseases\",\"HPO_diseaseSynonyms<->HPO_diseases\",\"HPO_hp<->HPO_parents\",\"HPO_hp<->HPO_parents\",\"HPO_descendants<->HPO_hp\",\"HPO_descendants<->HPO_hp\",\"HPO_hp<->HPO_synonyms\"],\"color.color\":[\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\"],\"color.highlight\":[\"orange\",\"orange\",\"orange\",\"orange\",\"orange\",\"orange\",\"orange\",\"orange\",\"orange\"]},\"nodesToDataframe\":true,\"edgesToDataframe\":true,\"options\":{\"width\":\"100%\",\"height\":\"100%\",\"nodes\":{\"shape\":\"dot\",\"borderWidth\":2,\"labelHighlightBold\":false},\"manipulation\":{\"enabled\":false},\"edges\":{\"width\":2,\"selectionWidth\":2},\"interaction\":{\"multiselect\":true,\"zoomSpeed\":1},\"layout\":{\"randomSeed\":2},\"physics\":{\"enabled\":false}},\"groups\":null,\"width\":null,\"height\":null,\"idselection\":{\"enabled\":false},\"byselection\":{\"enabled\":false},\"main\":null,\"submain\":null,\"footer\":null,\"background\":\"rgba(0, 0, 0, 0)\",\"tooltipStay\":300,\"tooltipStyle\":\"position: fixed;visibility:hidden;padding: 5px;white-space: nowrap;font-family: verdana;font-size:14px;font-color:#000000;background-color: #f5f4ed;-moz-border-radius: 3px;-webkit-border-radius: 3px;border-radius: 3px;border: 1px solid #808074;box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);\"},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://patzaw.github.io/ReDaMoR/reference/read_SQL_data_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a data model from an SQL file from the MySQL Workbench — read_SQL_data_model","title":"Read a data model from an SQL file from the MySQL Workbench — read_SQL_data_model","text":"Read data model SQL file MySQL Workbench","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/read_SQL_data_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a data model from an SQL file from the MySQL Workbench — read_SQL_data_model","text":"","code":"read_SQL_data_model(f, typeRef = \"MySQLWB\", mysqlcomments = TRUE)  readSQLDataModel(...)"},{"path":"https://patzaw.github.io/ReDaMoR/reference/read_SQL_data_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a data model from an SQL file from the MySQL Workbench — read_SQL_data_model","text":"f SQL file read typeRef reference type conversion (Default: \"MySQLWB\"; see list_type_ref()) mysqlcomments MySQL comments (starting #) removed (Default: TRUE) ... params read_SQL_data_model","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/read_SQL_data_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a data model from an SQL file from the MySQL Workbench — read_SQL_data_model","text":"RelDataModel object","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/read_SQL_data_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read a data model from an SQL file from the MySQL Workbench — read_SQL_data_model","text":"Database, table field names surrounded \"`\".","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/read_SQL_data_model.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Read a data model from an SQL file from the MySQL Workbench — read_SQL_data_model","text":"readSQLDataModel(): Deprecated version read_SQL_data_model","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/read_SQL_data_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a data model from an SQL file from the MySQL Workbench — read_SQL_data_model","text":"","code":"## Read the model ---- hpo_from_sql <- read_SQL_data_model(    system.file(\"examples/HPO-model.sql\", package=\"ReDaMoR\") ) #> Warning: l param is deprecated and will probably removed in the future #> Warning: l param is deprecated and will probably removed in the future #> Warning: l param is deprecated and will probably removed in the future #> Warning: l param is deprecated and will probably removed in the future #> Warning: l param is deprecated and will probably removed in the future #> Warning: l param is deprecated and will probably removed in the future #> Warning: l param is deprecated and will probably removed in the future #> Warning: l param is deprecated and will probably removed in the future #> Warning: l param is deprecated and will probably removed in the future ## Confront to data ---- confrontation_report <- confront_data(    hpo_from_sql,    path=list.files(       system.file(\"examples/HPO-subset\", package=\"ReDaMoR\"),       full.names=TRUE    ),    returnData=TRUE ) #> Processing \"HPO_hp\" (table 1 / 9)  #> Processing \"HPO_altId\" (table 2 / 9)  #> Processing \"HPO_sourceFiles\" (table 3 / 9)  #> Processing \"HPO_diseases\" (table 4 / 9)  #> Processing \"HPO_diseaseHP\" (table 5 / 9)  #> Processing \"HPO_diseaseSynonyms\" (table 6 / 9)  #> Processing \"HPO_parents\" (table 7 / 9)  #> Processing \"HPO_descendants\" (table 8 / 9)  #> Processing \"HPO_synonyms\" (table 9 / 9)  #> Model #> SUCCESS #>  #> Check configuration #>    - Optional checks: unique, not nullable, foreign keys #>    - Maximum number of records: Inf #>  #> HPO_hp #> SUCCESS #> Field issues or warnings #>    - description: SUCCESS Missing values 117/500 = 23% #>"},{"path":"https://patzaw.github.io/ReDaMoR/reference/read_json_data_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a data model from JSON — read_json_data_model","title":"Read a data model from JSON — read_json_data_model","text":"Read data model JSON","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/read_json_data_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a data model from JSON — read_json_data_model","text":"","code":"read_json_data_model(txt)"},{"path":"https://patzaw.github.io/ReDaMoR/reference/read_json_data_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a data model from JSON — read_json_data_model","text":"txt JSON string, URL file","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/read_json_data_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a data model from JSON — read_json_data_model","text":"","code":"## Read the model ---- hpo_model <- read_json_data_model(    system.file(\"examples/HPO-model.json\", package=\"ReDaMoR\") ) ## Confront to data ---- confrontation_report <- confront_data(    hpo_model,    path=list.files(       system.file(\"examples/HPO-subset\", package=\"ReDaMoR\"),       full.names=TRUE    ),    returnData=TRUE ) #> Processing \"HPO_hp\" (table 1 / 9)  #> Processing \"HPO_altId\" (table 2 / 9)  #> Processing \"HPO_sourceFiles\" (table 3 / 9)  #> Processing \"HPO_diseases\" (table 4 / 9)  #> Processing \"HPO_diseaseHP\" (table 5 / 9)  #> Processing \"HPO_diseaseSynonyms\" (table 6 / 9)  #> Processing \"HPO_parents\" (table 7 / 9)  #> Processing \"HPO_descendants\" (table 8 / 9)  #> Processing \"HPO_synonyms\" (table 9 / 9)  #> Model #> SUCCESS #>  #> Check configuration #>    - Optional checks: unique, not nullable, foreign keys #>    - Maximum number of records: Inf #>  #> HPO_hp #> SUCCESS #> Field issues or warnings #>    - description: SUCCESS Missing values 117/500 = 23% #>"},{"path":"https://patzaw.github.io/ReDaMoR/reference/read_named_MM.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a named sparse matrix in MatrixMarket text format — read_named_MM","title":"Read a named sparse matrix in MatrixMarket text format — read_named_MM","text":"Read named sparse matrix MatrixMarket text format","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/read_named_MM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a named sparse matrix in MatrixMarket text format — read_named_MM","text":"","code":"read_named_MM(   file,   skip = 0,   n_max = Inf,   class = c(\"dgCMatrix\", \"tibble\"),   guess_max = 20 )"},{"path":"https://patzaw.github.io/ReDaMoR/reference/read_named_MM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a named sparse matrix in MatrixMarket text format — read_named_MM","text":"file file read skip number records skip (default: 0) n_max maximum number records read (default: Inf) class class object return. default \"dgCMatrix\". \"tibble\" chosen, sparse matrix returned tibble 3 columns: (row index), j (column index) x (values) \"header\" attribute containing matrix rownames colnames. guess_max number lines read find header. (see read_named_MM_header())","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/read_named_MM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a named sparse matrix in MatrixMarket text format — read_named_MM","text":"default dgCMatrix. \"tibble\" class chosen, sparse matrix returned tibble 3 columns: (row index), j (column index) x (values) \"header\" attribute containing matrix rownames colnames.","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/read_named_MM_header.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the header of a named sparse matrix in MatrixMarket text format — read_named_MM_header","title":"Read the header of a named sparse matrix in MatrixMarket text format — read_named_MM_header","text":"Read header named sparse matrix MatrixMarket text format","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/read_named_MM_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the header of a named sparse matrix in MatrixMarket text format — read_named_MM_header","text":"","code":"read_named_MM_header(file, guess_max = 20)"},{"path":"https://patzaw.github.io/ReDaMoR/reference/read_named_MM_header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the header of a named sparse matrix in MatrixMarket text format — read_named_MM_header","text":"file file read guess_max number lines read find header. (4 sufficient. Default: 20)","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/read_named_MM_header.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read the header of a named sparse matrix in MatrixMarket text format — read_named_MM_header","text":"list following fields: rownames: character vector matrix row names colnames: character vector matrix column names rows: number matrix rows columns: number matrix columns values: number values matrix header_length: number lines header","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/recover_RelDataModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Recover an autosaved RelDataModel — recover_RelDataModel","title":"Recover an autosaved RelDataModel — recover_RelDataModel","text":"Recover autosaved RelDataModel","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/recover_RelDataModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recover an autosaved RelDataModel — recover_RelDataModel","text":"","code":"recover_RelDataModel(name = NA)"},{"path":"https://patzaw.github.io/ReDaMoR/reference/recover_RelDataModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recover an autosaved RelDataModel — recover_RelDataModel","text":"name name autosaved RelDataModel bring back. Available autosaved RelDataModel can listed using list_autosaved_RelDataModel(). NA (default) latest model returned.","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/remove_field.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove a field from a table in a RelDataModel — remove_field","title":"Remove a field from a table in a RelDataModel — remove_field","text":"Remove field table RelDataModel","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/remove_field.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove a field from a table in a RelDataModel — remove_field","text":"","code":"remove_field(x, tableName, fieldName, rmForeignKeys = FALSE)"},{"path":"https://patzaw.github.io/ReDaMoR/reference/remove_field.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove a field from a table in a RelDataModel — remove_field","text":"x RelDataModel tableName name table modify (single character) fieldName name field remove (single character) rmForeignKeys single logical indicating corresponding foreign keys removed. FALSE (default), function throw error encounter foreign key using field.","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/remove_field.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove a field from a table in a RelDataModel — remove_field","text":"RelDataModel","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/remove_foreign_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove a foreign key between two tables — remove_foreign_key","title":"Remove a foreign key between two tables — remove_foreign_key","text":"Remove foreign key two tables","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/remove_foreign_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove a foreign key between two tables — remove_foreign_key","text":"","code":"remove_foreign_key(x, fromTable, fromFields, toTable, toFields)"},{"path":"https://patzaw.github.io/ReDaMoR/reference/remove_foreign_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove a foreign key between two tables — remove_foreign_key","text":"x RelDataModel fromTable name referencing table fromFields name referencing fields toTable name referenced table toFields names referenced fields","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/remove_foreign_key.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove a foreign key between two tables — remove_foreign_key","text":"RelDataModel","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/remove_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove an index from a table in a RelDataModel — remove_index","title":"Remove an index from a table in a RelDataModel — remove_index","text":"Remove index table RelDataModel","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/remove_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove an index from a table in a RelDataModel — remove_index","text":"","code":"remove_index(x, tableName, fieldNames)"},{"path":"https://patzaw.github.io/ReDaMoR/reference/remove_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove an index from a table in a RelDataModel — remove_index","text":"x RelDataModel tableName name table modify (single character) fieldNames names fields composing index","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/remove_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove an index from a table in a RelDataModel — remove_index","text":"RelDataModel","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/remove_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove a table from a RelDataModel — remove_table","title":"Remove a table from a RelDataModel — remove_table","text":"Remove table RelDataModel","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/remove_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove a table from a RelDataModel — remove_table","text":"","code":"remove_table(x, tableName, rmForeignKeys = FALSE)"},{"path":"https://patzaw.github.io/ReDaMoR/reference/remove_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove a table from a RelDataModel — remove_table","text":"x RelDataModel tableName name table remove rmForeignKeys TRUE, remove foreign keys available extraction. FALSE (default) function throw error foreign keys exist extracted RelDataModel.","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/remove_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove a table from a RelDataModel — remove_table","text":"RelDataModel","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/rename_field.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename an existing field in a RelDataModel table — rename_field","title":"Rename an existing field in a RelDataModel table — rename_field","text":"Rename existing field RelDataModel table","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/rename_field.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename an existing field in a RelDataModel table — rename_field","text":"","code":"rename_field(x, tableName, current, new)"},{"path":"https://patzaw.github.io/ReDaMoR/reference/rename_field.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename an existing field in a RelDataModel table — rename_field","text":"x RelDataModel tableName name table modify (single character) current current name field modify (single character) new new name field (single character)","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/rename_field.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename an existing field in a RelDataModel table — rename_field","text":"RelDataModel","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/rename_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename a table in a RelDataModel — rename_table","title":"Rename a table in a RelDataModel — rename_table","text":"Rename table RelDataModel","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/rename_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename a table in a RelDataModel — rename_table","text":"","code":"rename_table(x, old, new)"},{"path":"https://patzaw.github.io/ReDaMoR/reference/rename_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename a table in a RelDataModel — rename_table","text":"x RelDataModel object old single character corresponding table name change new new table name","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/rename_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename a table in a RelDataModel — rename_table","text":"RelDataModel","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/set_primary_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the primary key a table in a RelDataModel — set_primary_key","title":"Set the primary key a table in a RelDataModel — set_primary_key","text":"Set primary key table RelDataModel","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/set_primary_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the primary key a table in a RelDataModel — set_primary_key","text":"","code":"set_primary_key(x, tableName, fieldNames)"},{"path":"https://patzaw.github.io/ReDaMoR/reference/set_primary_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the primary key a table in a RelDataModel — set_primary_key","text":"x RelDataModel tableName name table modify (single character) fieldNames names fields include primary key","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/set_primary_key.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the primary key a table in a RelDataModel — set_primary_key","text":"RelDataModel","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/set_unique_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Set table index uniqueness in a RelDataModel — set_unique_index","title":"Set table index uniqueness in a RelDataModel — set_unique_index","text":"Set table index uniqueness RelDataModel","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/set_unique_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set table index uniqueness in a RelDataModel — set_unique_index","text":"","code":"set_unique_index(x, tableName, fieldNames, unique)"},{"path":"https://patzaw.github.io/ReDaMoR/reference/set_unique_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set table index uniqueness in a RelDataModel — set_unique_index","text":"x RelDataModel tableName name table modify (single character) fieldNames names fields composing index unique logical value","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/set_unique_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set table index uniqueness in a RelDataModel — set_unique_index","text":"RelDataModel","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/sub-.RelDataModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset a RelDataModel — [.RelDataModel","title":"Subset a RelDataModel — [.RelDataModel","text":"Subset RelDataModel","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/sub-.RelDataModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset a RelDataModel — [.RelDataModel","text":"","code":"# S3 method for RelDataModel [(x, i, rmForeignKeys = FALSE, ...)"},{"path":"https://patzaw.github.io/ReDaMoR/reference/sub-.RelDataModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset a RelDataModel — [.RelDataModel","text":"x RelDataModel objcet index names elements extract rmForeignKeys TRUE, remove foreign keys available extraction. FALSE (default) function throw error foreign keys exist extracted RelDataModel. ... additional arguments RelDataModel function.","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/toDBM.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a RelDataModel object in a list of 5 normalized tibbles — toDBM","title":"Convert a RelDataModel object in a list of 5 normalized tibbles — toDBM","text":"Convert RelDataModel object list 5 normalized tibbles","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/toDBM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a RelDataModel object in a list of 5 normalized tibbles — toDBM","text":"","code":"toDBM(rdm)"},{"path":"https://patzaw.github.io/ReDaMoR/reference/toDBM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a RelDataModel object in a list of 5 normalized tibbles — toDBM","text":"rdm RelDataModel object","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/toDBM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a RelDataModel object in a list of 5 normalized tibbles — toDBM","text":"list following tibbles: tables: tables model following information name: name table x: x coordinate table model drawing (NA ==> position undefined) y: y coordinate table model drawing (NA ==> position undefined) color: color table model drawing (NA ==> undefined) comment: comment table fields: fields model following information name: name field type: type field nullable: logical indicating field can null comment: comment field table: name table field belongs primaryKeys: primary keys model following information table: name relevant table field: name field participating primary key foreignKeys: foreign keys model following information table: name referring table fki: identifier foreign key (referring table) field: name referring field refTable: name referred table refField: name referred field indexes: indexes model following information table: name relevant table idx: identifier index (table) field: name field participating index unique: logical indicating field unique","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/update_field.html","id":null,"dir":"Reference","previous_headings":"","what":"Update field information in a table of a RelDataModel — update_field","title":"Update field information in a table of a RelDataModel — update_field","text":"Update field information table RelDataModel","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/update_field.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update field information in a table of a RelDataModel — update_field","text":"","code":"update_field(   x,   tableName,   fieldName,   type = NULL,   nullable = NULL,   unique = NULL,   comment = NULL )"},{"path":"https://patzaw.github.io/ReDaMoR/reference/update_field.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update field information in a table of a RelDataModel — update_field","text":"x RelDataModel tableName name table modify (single character) fieldName name field modify (single character) type type field (single character) nullable field nullable (single logical) unique values unique (single logical) comment description (single character)","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/update_field.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update field information in a table of a RelDataModel — update_field","text":"RelDataModel","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/update_foreign_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a the cardinalities of a foreign key between two tables — update_foreign_key","title":"Update a the cardinalities of a foreign key between two tables — update_foreign_key","text":"Update cardinalities foreign key two tables","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/update_foreign_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a the cardinalities of a foreign key between two tables — update_foreign_key","text":"","code":"update_foreign_key(   x,   fromTable,   fromFields,   toTable,   toFields,   fmin,   fmax,   tmin,   tmax )"},{"path":"https://patzaw.github.io/ReDaMoR/reference/update_foreign_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a the cardinalities of a foreign key between two tables — update_foreign_key","text":"x RelDataModel fromTable name referencing table fromFields name referencing fields toTable name referenced table toFields names referenced fields fmin minimum cardinality fmax maximum cardinality tmin minimum cardinality tmax maximum cardinality","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/update_foreign_key.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update a the cardinalities of a foreign key between two tables — update_foreign_key","text":"RelDataModel","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/update_table_display.html","id":null,"dir":"Reference","previous_headings":"","what":"Update the display of a table of a RelDataModel — update_table_display","title":"Update the display of a table of a RelDataModel — update_table_display","text":"Update display table RelDataModel","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/update_table_display.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update the display of a table of a RelDataModel — update_table_display","text":"","code":"update_table_display(   x,   tableName,   px = NULL,   py = NULL,   color = NULL,   comment = NULL )"},{"path":"https://patzaw.github.io/ReDaMoR/reference/update_table_display.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update the display of a table of a RelDataModel — update_table_display","text":"x RelDataModel tableName name table modify (single character) px position table: x value py position table: y value color color table comment table description/comment","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/update_table_display.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update the display of a table of a RelDataModel — update_table_display","text":"RelDataModel","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/view_confrontation_report.html","id":null,"dir":"Reference","previous_headings":"","what":"View confrontation report in rstudio viewer — view_confrontation_report","title":"View confrontation report in rstudio viewer — view_confrontation_report","text":"View confrontation report rstudio viewer","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/view_confrontation_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"View confrontation report in rstudio viewer — view_confrontation_report","text":"","code":"view_confrontation_report(cr, ...)"},{"path":"https://patzaw.github.io/ReDaMoR/reference/view_confrontation_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"View confrontation report in rstudio viewer — view_confrontation_report","text":"cr confrontation report confront_data ... additional params format_confrontation_report_md() function","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/write_json_data_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a data model in a JSON file — write_json_data_model","title":"Write a data model in a JSON file — write_json_data_model","text":"Write data model JSON file","code":""},{"path":"https://patzaw.github.io/ReDaMoR/reference/write_json_data_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a data model in a JSON file — write_json_data_model","text":"","code":"write_json_data_model(x, path)"},{"path":"https://patzaw.github.io/ReDaMoR/reference/write_json_data_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a data model in a JSON file — write_json_data_model","text":"x model written path file disk","code":""},{"path":"https://patzaw.github.io/ReDaMoR/news/index.html","id":"version-076","dir":"Changelog","previous_headings":"","what":"Version 0.7.6","title":"Version 0.7.6","text":"Code speed : faster evaluation nullable distinct constraints","code":""},{"path":"https://patzaw.github.io/ReDaMoR/news/index.html","id":"version-074","dir":"Changelog","previous_headings":"","what":"Version 0.7.4","title":"Version 0.7.4","text":"CRAN release: 2024-02-07 fixes #4: change default values RelTableModel()","code":""},{"path":"https://patzaw.github.io/ReDaMoR/news/index.html","id":"version-073","dir":"Changelog","previous_headings":"","what":"Version 0.7.3","title":"Version 0.7.3","text":"Default values nullable, unique comment properties fields","code":""},{"path":"https://patzaw.github.io/ReDaMoR/news/index.html","id":"version-072","dir":"Changelog","previous_headings":"","what":"Version 0.7.2","title":"Version 0.7.2","text":"CRAN release: 2023-07-05 Bug fix as_type() converting empty base64.","code":""},{"path":"https://patzaw.github.io/ReDaMoR/news/index.html","id":"version-071","dir":"Changelog","previous_headings":"","what":"Version 0.7.1","title":"Version 0.7.1","text":"CRAN release: 2022-10-19 add copy_fields() function corresponding functionality model_relational_data().","code":""},{"path":"https://patzaw.github.io/ReDaMoR/news/index.html","id":"version-070","dir":"Changelog","previous_headings":"","what":"Version 0.7.0","title":"Version 0.7.0","text":"fixes #2: change signature RelTableModel()","code":""},{"path":"https://patzaw.github.io/ReDaMoR/news/index.html","id":"version-066","dir":"Changelog","previous_headings":"","what":"Version 0.6.6","title":"Version 0.6.6","text":"Fix df_to_model() documentation","code":""},{"path":"https://patzaw.github.io/ReDaMoR/news/index.html","id":"version-065","dir":"Changelog","previous_headings":"","what":"Version 0.6.5","title":"Version 0.6.5","text":"CRAN release: 2022-09-05 Fix warnings calling icon() Fix edition foreign keys Fix display index menu","code":""},{"path":"https://patzaw.github.io/ReDaMoR/news/index.html","id":"version-064","dir":"Changelog","previous_headings":"","what":"Version 0.6.4","title":"Version 0.6.4","text":"Correction vignette display Fix display bug editing primary key","code":""},{"path":"https://patzaw.github.io/ReDaMoR/news/index.html","id":"version-063","dir":"Changelog","previous_headings":"","what":"Version 0.6.3","title":"Version 0.6.3","text":"CRAN release: 2022-04-13 smoother interface updating fields edit multiple fields ","code":""},{"path":[]},{"path":"https://patzaw.github.io/ReDaMoR/news/index.html","id":"improvements-0-6-1","dir":"Changelog","previous_headings":"","what":"Improvements","title":"Version 0.6.1","text":"faster fromDBM() function NA values taken account checking uniqueness","code":""},{"path":[]},{"path":"https://patzaw.github.io/ReDaMoR/news/index.html","id":"new-features-0-6-0","dir":"Changelog","previous_headings":"","what":"New features","title":"Version 0.6.0","text":"Expanding matrix support Matrix class Matrix package","code":""},{"path":"https://patzaw.github.io/ReDaMoR/news/index.html","id":"version-052","dir":"Changelog","previous_headings":"","what":"Version 0.5.2","title":"Version 0.5.2","text":"CRAN release: 2022-01-13","code":""},{"path":"https://patzaw.github.io/ReDaMoR/news/index.html","id":"new-features-0-5-2","dir":"Changelog","previous_headings":"","what":"New features","title":"Version 0.5.2","text":"Supporting “base64” data type (BLOB).","code":""},{"path":"https://patzaw.github.io/ReDaMoR/news/index.html","id":"version-051","dir":"Changelog","previous_headings":"","what":"Version 0.5.1","title":"Version 0.5.1","text":"Simplification matrix implementation.","code":""},{"path":[]},{"path":"https://patzaw.github.io/ReDaMoR/news/index.html","id":"new-features-0-5-0","dir":"Changelog","previous_headings":"","what":"New features","title":"Version 0.5.0","text":"Modeling matrix table 3 fields: 2 types ‘row’ ‘column’ 3rd choice.","code":""},{"path":[]},{"path":"https://patzaw.github.io/ReDaMoR/news/index.html","id":"improved-documentation-0-4-4","dir":"Changelog","previous_headings":"","what":"Improved documentation","title":"Version 0.4.4","text":"TKCat information create foreign keys Shiny user interface","code":""},{"path":"https://patzaw.github.io/ReDaMoR/news/index.html","id":"version-043","dir":"Changelog","previous_headings":"","what":"Version 0.4.3","title":"Version 0.4.3","text":"CRAN release: 2020-12-14","code":""},{"path":"https://patzaw.github.io/ReDaMoR/news/index.html","id":"new-features-0-4-3","dir":"Changelog","previous_headings":"","what":"New features","title":"Version 0.4.3","text":"length.RelTableModel() returns number fields table. lengths() function applied RelDataModel object returns number fields table. confront_data(): success=TRUE empty model confronted empty data.","code":""},{"path":"https://patzaw.github.io/ReDaMoR/news/index.html","id":"bug-fixes-0-4-3","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"Version 0.4.3","text":"‘[.RelDataModel’: now correctly handles tables without foreign keys. Allowing dispatching lengths methods. reliable foreign key checks Remove irrelevant message comparing 2 empty RelDataModel Solved display issue foreign key interfaces firefox (selectize work expected modalDialog)","code":""},{"path":"https://patzaw.github.io/ReDaMoR/news/index.html","id":"version-042","dir":"Changelog","previous_headings":"","what":"Version 0.4.2","title":"Version 0.4.2","text":"CRAN release: 2020-03-31 Available CRAN Slights modifications fit CRAN requirements","code":""},{"path":[]},{"path":"https://patzaw.github.io/ReDaMoR/news/index.html","id":"new-features-0-4-0","dir":"Changelog","previous_headings":"","what":"New features","title":"Version 0.4.0","text":"Ctrl+Z / Ctrl+Shift+Z  undo redo Enter validating new name del deleting tables foreign keys F2 renaming tables editing foreign key cardinalities order fields can updated Tables can duplicated Cardinalities existing relationships can updated Explicit messages displayed regarding “unexpected” behaviours Get foreign keys model","code":""},{"path":"https://patzaw.github.io/ReDaMoR/news/index.html","id":"implementation-changes-0-4-0","dir":"Changelog","previous_headings":"","what":"Implementation changes","title":"Version 0.4.0","text":"Models model_relational_data() autosaved dedicated environment instead .GlobalEnv. CSS JS maintained dedicated files Help tour launched default button blinking 10 seconds application starts Correction several bugs interface underlying functions","code":""}]
